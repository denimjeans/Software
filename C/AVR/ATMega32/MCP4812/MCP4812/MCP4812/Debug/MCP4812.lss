
MCP4812.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000011e6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  000011e6  0000127a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000001  00800068  00800068  00001282  2**0
                  ALLOC
  3 .stab         000006cc  00000000  00000000  00001284  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000085  00000000  00000000  00001950  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000180  00000000  00000000  000019d5  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 000001ce  00000000  00000000  00001b55  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000022a5  00000000  00000000  00001d23  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000010b3  00000000  00000000  00003fc8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000158d  00000000  00000000  0000507b  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000001c0  00000000  00000000  00006608  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000402  00000000  00000000  000067c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000c25  00000000  00000000  00006bca  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_pubtypes 0000060e  00000000  00000000  000077ef  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000068  00000000  00000000  00007dfd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a8 e6       	ldi	r26, 0x68	; 104
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
      68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
      6a:	a9 36       	cpi	r26, 0x69	; 105
      6c:	b1 07       	cpc	r27, r17
      6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>

00000070 <__do_copy_data>:
      70:	10 e0       	ldi	r17, 0x00	; 0
      72:	a0 e6       	ldi	r26, 0x60	; 96
      74:	b0 e0       	ldi	r27, 0x00	; 0
      76:	e6 ee       	ldi	r30, 0xE6	; 230
      78:	f1 e1       	ldi	r31, 0x11	; 17
      7a:	02 c0       	rjmp	.+4      	; 0x80 <__do_copy_data+0x10>
      7c:	05 90       	lpm	r0, Z+
      7e:	0d 92       	st	X+, r0
      80:	a8 36       	cpi	r26, 0x68	; 104
      82:	b1 07       	cpc	r27, r17
      84:	d9 f7       	brne	.-10     	; 0x7c <__do_copy_data+0xc>
      86:	0e 94 49 00 	call	0x92	; 0x92 <main>
      8a:	0c 94 f1 08 	jmp	0x11e2	; 0x11e2 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <main>:
void SPI_Send(char Senden);

char Daten = 0x00;

int main(void)
{
      92:	0f 93       	push	r16
      94:	1f 93       	push	r17
      96:	df 93       	push	r29
      98:	cf 93       	push	r28
      9a:	cd b7       	in	r28, 0x3d	; 61
      9c:	de b7       	in	r29, 0x3e	; 62
      9e:	ee 97       	sbiw	r28, 0x3e	; 62
      a0:	0f b6       	in	r0, 0x3f	; 63
      a2:	f8 94       	cli
      a4:	de bf       	out	0x3e, r29	; 62
      a6:	0f be       	out	0x3f, r0	; 63
      a8:	cd bf       	out	0x3d, r28	; 61
	DDRB =  (1<<DDB7) | (1<<DDB5) | (1<<DDB0);										// CS(PB.0), SCK und MOSI als Output einstellen
      aa:	87 e3       	ldi	r24, 0x37	; 55
      ac:	90 e0       	ldi	r25, 0x00	; 0
      ae:	21 ea       	ldi	r18, 0xA1	; 161
      b0:	fc 01       	movw	r30, r24
      b2:	20 83       	st	Z, r18
	PORTB = (1<<PB0);																// PB.0 setzen
      b4:	88 e3       	ldi	r24, 0x38	; 56
      b6:	90 e0       	ldi	r25, 0x00	; 0
      b8:	21 e0       	ldi	r18, 0x01	; 1
      ba:	fc 01       	movw	r30, r24
      bc:	20 83       	st	Z, r18
	
	SPI_Init();
      be:	0e 94 aa 02 	call	0x554	; 0x554 <SPI_Init>
	
    while(1)
    {
		PORTB &= ~(1 << PB0);														// CS auf Low
      c2:	88 e3       	ldi	r24, 0x38	; 56
      c4:	90 e0       	ldi	r25, 0x00	; 0
      c6:	28 e3       	ldi	r18, 0x38	; 56
      c8:	30 e0       	ldi	r19, 0x00	; 0
      ca:	f9 01       	movw	r30, r18
      cc:	20 81       	ld	r18, Z
      ce:	2e 7f       	andi	r18, 0xFE	; 254
      d0:	fc 01       	movw	r30, r24
      d2:	20 83       	st	Z, r18
      d4:	80 e0       	ldi	r24, 0x00	; 0
      d6:	90 e0       	ldi	r25, 0x00	; 0
      d8:	a0 e8       	ldi	r26, 0x80	; 128
      da:	bf e3       	ldi	r27, 0x3F	; 63
      dc:	89 83       	std	Y+1, r24	; 0x01
      de:	9a 83       	std	Y+2, r25	; 0x02
      e0:	ab 83       	std	Y+3, r26	; 0x03
      e2:	bc 83       	std	Y+4, r27	; 0x04
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 3e6) * __us;
      e4:	69 81       	ldd	r22, Y+1	; 0x01
      e6:	7a 81       	ldd	r23, Y+2	; 0x02
      e8:	8b 81       	ldd	r24, Y+3	; 0x03
      ea:	9c 81       	ldd	r25, Y+4	; 0x04
      ec:	2b ea       	ldi	r18, 0xAB	; 171
      ee:	3a ea       	ldi	r19, 0xAA	; 170
      f0:	4a ea       	ldi	r20, 0xAA	; 170
      f2:	50 e4       	ldi	r21, 0x40	; 64
      f4:	0e 94 a0 04 	call	0x940	; 0x940 <__mulsf3>
      f8:	dc 01       	movw	r26, r24
      fa:	cb 01       	movw	r24, r22
      fc:	8d 83       	std	Y+5, r24	; 0x05
      fe:	9e 83       	std	Y+6, r25	; 0x06
     100:	af 83       	std	Y+7, r26	; 0x07
     102:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
     104:	11 e0       	ldi	r17, 0x01	; 1
     106:	6d 81       	ldd	r22, Y+5	; 0x05
     108:	7e 81       	ldd	r23, Y+6	; 0x06
     10a:	8f 81       	ldd	r24, Y+7	; 0x07
     10c:	98 85       	ldd	r25, Y+8	; 0x08
     10e:	20 e0       	ldi	r18, 0x00	; 0
     110:	30 e0       	ldi	r19, 0x00	; 0
     112:	40 e8       	ldi	r20, 0x80	; 128
     114:	5f e3       	ldi	r21, 0x3F	; 63
     116:	0e 94 a8 06 	call	0xd50	; 0xd50 <__ltsf2>
     11a:	88 23       	and	r24, r24
     11c:	0c f0       	brlt	.+2      	; 0x120 <main+0x8e>
     11e:	10 e0       	ldi	r17, 0x00	; 0
     120:	11 23       	and	r17, r17
     122:	19 f0       	breq	.+6      	; 0x12a <main+0x98>
		__ticks = 1;
     124:	81 e0       	ldi	r24, 0x01	; 1
     126:	89 87       	std	Y+9, r24	; 0x09
     128:	a3 c0       	rjmp	.+326    	; 0x270 <main+0x1de>
	else if (__tmp > 255)
     12a:	11 e0       	ldi	r17, 0x01	; 1
     12c:	6d 81       	ldd	r22, Y+5	; 0x05
     12e:	7e 81       	ldd	r23, Y+6	; 0x06
     130:	8f 81       	ldd	r24, Y+7	; 0x07
     132:	98 85       	ldd	r25, Y+8	; 0x08
     134:	20 e0       	ldi	r18, 0x00	; 0
     136:	30 e0       	ldi	r19, 0x00	; 0
     138:	4f e7       	ldi	r20, 0x7F	; 127
     13a:	53 e4       	ldi	r21, 0x43	; 67
     13c:	0e 94 48 06 	call	0xc90	; 0xc90 <__gtsf2>
     140:	18 16       	cp	r1, r24
     142:	0c f0       	brlt	.+2      	; 0x146 <main+0xb4>
     144:	10 e0       	ldi	r17, 0x00	; 0
     146:	11 23       	and	r17, r17
     148:	09 f4       	brne	.+2      	; 0x14c <main+0xba>
     14a:	89 c0       	rjmp	.+274    	; 0x25e <main+0x1cc>
	{
		_delay_ms(__us / 1000.0);
     14c:	69 81       	ldd	r22, Y+1	; 0x01
     14e:	7a 81       	ldd	r23, Y+2	; 0x02
     150:	8b 81       	ldd	r24, Y+3	; 0x03
     152:	9c 81       	ldd	r25, Y+4	; 0x04
     154:	20 e0       	ldi	r18, 0x00	; 0
     156:	30 e0       	ldi	r19, 0x00	; 0
     158:	4a e7       	ldi	r20, 0x7A	; 122
     15a:	54 e4       	ldi	r21, 0x44	; 68
     15c:	0e 94 9a 05 	call	0xb34	; 0xb34 <__divsf3>
     160:	dc 01       	movw	r26, r24
     162:	cb 01       	movw	r24, r22
     164:	8a 87       	std	Y+10, r24	; 0x0a
     166:	9b 87       	std	Y+11, r25	; 0x0b
     168:	ac 87       	std	Y+12, r26	; 0x0c
     16a:	bd 87       	std	Y+13, r27	; 0x0d
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     16c:	6a 85       	ldd	r22, Y+10	; 0x0a
     16e:	7b 85       	ldd	r23, Y+11	; 0x0b
     170:	8c 85       	ldd	r24, Y+12	; 0x0c
     172:	9d 85       	ldd	r25, Y+13	; 0x0d
     174:	20 e0       	ldi	r18, 0x00	; 0
     176:	30 e0       	ldi	r19, 0x00	; 0
     178:	4a e7       	ldi	r20, 0x7A	; 122
     17a:	55 e4       	ldi	r21, 0x45	; 69
     17c:	0e 94 a0 04 	call	0x940	; 0x940 <__mulsf3>
     180:	dc 01       	movw	r26, r24
     182:	cb 01       	movw	r24, r22
     184:	8e 87       	std	Y+14, r24	; 0x0e
     186:	9f 87       	std	Y+15, r25	; 0x0f
     188:	a8 8b       	std	Y+16, r26	; 0x10
     18a:	b9 8b       	std	Y+17, r27	; 0x11
	if (__tmp < 1.0)
     18c:	11 e0       	ldi	r17, 0x01	; 1
     18e:	6e 85       	ldd	r22, Y+14	; 0x0e
     190:	7f 85       	ldd	r23, Y+15	; 0x0f
     192:	88 89       	ldd	r24, Y+16	; 0x10
     194:	99 89       	ldd	r25, Y+17	; 0x11
     196:	20 e0       	ldi	r18, 0x00	; 0
     198:	30 e0       	ldi	r19, 0x00	; 0
     19a:	40 e8       	ldi	r20, 0x80	; 128
     19c:	5f e3       	ldi	r21, 0x3F	; 63
     19e:	0e 94 a8 06 	call	0xd50	; 0xd50 <__ltsf2>
     1a2:	88 23       	and	r24, r24
     1a4:	0c f0       	brlt	.+2      	; 0x1a8 <main+0x116>
     1a6:	10 e0       	ldi	r17, 0x00	; 0
     1a8:	11 23       	and	r17, r17
     1aa:	29 f0       	breq	.+10     	; 0x1b6 <main+0x124>
		__ticks = 1;
     1ac:	81 e0       	ldi	r24, 0x01	; 1
     1ae:	90 e0       	ldi	r25, 0x00	; 0
     1b0:	9b 8b       	std	Y+19, r25	; 0x13
     1b2:	8a 8b       	std	Y+18, r24	; 0x12
     1b4:	46 c0       	rjmp	.+140    	; 0x242 <main+0x1b0>
	else if (__tmp > 65535)
     1b6:	11 e0       	ldi	r17, 0x01	; 1
     1b8:	6e 85       	ldd	r22, Y+14	; 0x0e
     1ba:	7f 85       	ldd	r23, Y+15	; 0x0f
     1bc:	88 89       	ldd	r24, Y+16	; 0x10
     1be:	99 89       	ldd	r25, Y+17	; 0x11
     1c0:	20 e0       	ldi	r18, 0x00	; 0
     1c2:	3f ef       	ldi	r19, 0xFF	; 255
     1c4:	4f e7       	ldi	r20, 0x7F	; 127
     1c6:	57 e4       	ldi	r21, 0x47	; 71
     1c8:	0e 94 48 06 	call	0xc90	; 0xc90 <__gtsf2>
     1cc:	18 16       	cp	r1, r24
     1ce:	0c f0       	brlt	.+2      	; 0x1d2 <main+0x140>
     1d0:	10 e0       	ldi	r17, 0x00	; 0
     1d2:	11 23       	and	r17, r17
     1d4:	61 f1       	breq	.+88     	; 0x22e <main+0x19c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     1d6:	6a 85       	ldd	r22, Y+10	; 0x0a
     1d8:	7b 85       	ldd	r23, Y+11	; 0x0b
     1da:	8c 85       	ldd	r24, Y+12	; 0x0c
     1dc:	9d 85       	ldd	r25, Y+13	; 0x0d
     1de:	20 e0       	ldi	r18, 0x00	; 0
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e2       	ldi	r20, 0x20	; 32
     1e4:	51 e4       	ldi	r21, 0x41	; 65
     1e6:	0e 94 a0 04 	call	0x940	; 0x940 <__mulsf3>
     1ea:	dc 01       	movw	r26, r24
     1ec:	cb 01       	movw	r24, r22
     1ee:	bc 01       	movw	r22, r24
     1f0:	cd 01       	movw	r24, r26
     1f2:	0e 94 cc 02 	call	0x598	; 0x598 <__fixunssfsi>
     1f6:	dc 01       	movw	r26, r24
     1f8:	cb 01       	movw	r24, r22
     1fa:	9b 8b       	std	Y+19, r25	; 0x13
     1fc:	8a 8b       	std	Y+18, r24	; 0x12
     1fe:	12 c0       	rjmp	.+36     	; 0x224 <main+0x192>
     200:	80 e9       	ldi	r24, 0x90	; 144
     202:	91 e0       	ldi	r25, 0x01	; 1
     204:	9d 8b       	std	Y+21, r25	; 0x15
     206:	8c 8b       	std	Y+20, r24	; 0x14
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     208:	8c 89       	ldd	r24, Y+20	; 0x14
     20a:	9d 89       	ldd	r25, Y+21	; 0x15
     20c:	8c 01       	movw	r16, r24
     20e:	c8 01       	movw	r24, r16
     210:	01 97       	sbiw	r24, 0x01	; 1
     212:	f1 f7       	brne	.-4      	; 0x210 <main+0x17e>
     214:	8c 01       	movw	r16, r24
     216:	1d 8b       	std	Y+21, r17	; 0x15
     218:	0c 8b       	std	Y+20, r16	; 0x14
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     21a:	8a 89       	ldd	r24, Y+18	; 0x12
     21c:	9b 89       	ldd	r25, Y+19	; 0x13
     21e:	01 97       	sbiw	r24, 0x01	; 1
     220:	9b 8b       	std	Y+19, r25	; 0x13
     222:	8a 8b       	std	Y+18, r24	; 0x12
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     224:	8a 89       	ldd	r24, Y+18	; 0x12
     226:	9b 89       	ldd	r25, Y+19	; 0x13
     228:	00 97       	sbiw	r24, 0x00	; 0
     22a:	51 f7       	brne	.-44     	; 0x200 <main+0x16e>
     22c:	28 c0       	rjmp	.+80     	; 0x27e <main+0x1ec>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     22e:	6e 85       	ldd	r22, Y+14	; 0x0e
     230:	7f 85       	ldd	r23, Y+15	; 0x0f
     232:	88 89       	ldd	r24, Y+16	; 0x10
     234:	99 89       	ldd	r25, Y+17	; 0x11
     236:	0e 94 cc 02 	call	0x598	; 0x598 <__fixunssfsi>
     23a:	dc 01       	movw	r26, r24
     23c:	cb 01       	movw	r24, r22
     23e:	9b 8b       	std	Y+19, r25	; 0x13
     240:	8a 8b       	std	Y+18, r24	; 0x12
     242:	8a 89       	ldd	r24, Y+18	; 0x12
     244:	9b 89       	ldd	r25, Y+19	; 0x13
     246:	9f 8b       	std	Y+23, r25	; 0x17
     248:	8e 8b       	std	Y+22, r24	; 0x16
     24a:	8e 89       	ldd	r24, Y+22	; 0x16
     24c:	9f 89       	ldd	r25, Y+23	; 0x17
     24e:	8c 01       	movw	r16, r24
     250:	f8 01       	movw	r30, r16
     252:	31 97       	sbiw	r30, 0x01	; 1
     254:	f1 f7       	brne	.-4      	; 0x252 <main+0x1c0>
     256:	8f 01       	movw	r16, r30
     258:	1f 8b       	std	Y+23, r17	; 0x17
     25a:	0e 8b       	std	Y+22, r16	; 0x16
     25c:	10 c0       	rjmp	.+32     	; 0x27e <main+0x1ec>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     25e:	6d 81       	ldd	r22, Y+5	; 0x05
     260:	7e 81       	ldd	r23, Y+6	; 0x06
     262:	8f 81       	ldd	r24, Y+7	; 0x07
     264:	98 85       	ldd	r25, Y+8	; 0x08
     266:	0e 94 cc 02 	call	0x598	; 0x598 <__fixunssfsi>
     26a:	dc 01       	movw	r26, r24
     26c:	cb 01       	movw	r24, r22
     26e:	89 87       	std	Y+9, r24	; 0x09
     270:	89 85       	ldd	r24, Y+9	; 0x09
     272:	88 8f       	std	Y+24, r24	; 0x18
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     274:	88 8d       	ldd	r24, Y+24	; 0x18
     276:	18 2f       	mov	r17, r24
     278:	1a 95       	dec	r17
     27a:	f1 f7       	brne	.-4      	; 0x278 <main+0x1e6>
     27c:	18 8f       	std	Y+24, r17	; 0x18
		
		_delay_us(1);
		SPI_Send(0x10);
     27e:	80 e1       	ldi	r24, 0x10	; 16
     280:	0e 94 b6 02 	call	0x56c	; 0x56c <SPI_Send>
		SPI_Send(Daten);
     284:	80 91 68 00 	lds	r24, 0x0068
     288:	0e 94 b6 02 	call	0x56c	; 0x56c <SPI_Send>
     28c:	80 e0       	ldi	r24, 0x00	; 0
     28e:	90 e0       	ldi	r25, 0x00	; 0
     290:	a0 e8       	ldi	r26, 0x80	; 128
     292:	bf e3       	ldi	r27, 0x3F	; 63
     294:	89 8f       	std	Y+25, r24	; 0x19
     296:	9a 8f       	std	Y+26, r25	; 0x1a
     298:	ab 8f       	std	Y+27, r26	; 0x1b
     29a:	bc 8f       	std	Y+28, r27	; 0x1c
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 3e6) * __us;
     29c:	69 8d       	ldd	r22, Y+25	; 0x19
     29e:	7a 8d       	ldd	r23, Y+26	; 0x1a
     2a0:	8b 8d       	ldd	r24, Y+27	; 0x1b
     2a2:	9c 8d       	ldd	r25, Y+28	; 0x1c
     2a4:	2b ea       	ldi	r18, 0xAB	; 171
     2a6:	3a ea       	ldi	r19, 0xAA	; 170
     2a8:	4a ea       	ldi	r20, 0xAA	; 170
     2aa:	50 e4       	ldi	r21, 0x40	; 64
     2ac:	0e 94 a0 04 	call	0x940	; 0x940 <__mulsf3>
     2b0:	dc 01       	movw	r26, r24
     2b2:	cb 01       	movw	r24, r22
     2b4:	8d 8f       	std	Y+29, r24	; 0x1d
     2b6:	9e 8f       	std	Y+30, r25	; 0x1e
     2b8:	af 8f       	std	Y+31, r26	; 0x1f
     2ba:	b8 a3       	std	Y+32, r27	; 0x20
	if (__tmp < 1.0)
     2bc:	11 e0       	ldi	r17, 0x01	; 1
     2be:	6d 8d       	ldd	r22, Y+29	; 0x1d
     2c0:	7e 8d       	ldd	r23, Y+30	; 0x1e
     2c2:	8f 8d       	ldd	r24, Y+31	; 0x1f
     2c4:	98 a1       	ldd	r25, Y+32	; 0x20
     2c6:	20 e0       	ldi	r18, 0x00	; 0
     2c8:	30 e0       	ldi	r19, 0x00	; 0
     2ca:	40 e8       	ldi	r20, 0x80	; 128
     2cc:	5f e3       	ldi	r21, 0x3F	; 63
     2ce:	0e 94 a8 06 	call	0xd50	; 0xd50 <__ltsf2>
     2d2:	88 23       	and	r24, r24
     2d4:	0c f0       	brlt	.+2      	; 0x2d8 <main+0x246>
     2d6:	10 e0       	ldi	r17, 0x00	; 0
     2d8:	11 23       	and	r17, r17
     2da:	19 f0       	breq	.+6      	; 0x2e2 <main+0x250>
		__ticks = 1;
     2dc:	81 e0       	ldi	r24, 0x01	; 1
     2de:	89 a3       	std	Y+33, r24	; 0x21
     2e0:	a3 c0       	rjmp	.+326    	; 0x428 <main+0x396>
	else if (__tmp > 255)
     2e2:	11 e0       	ldi	r17, 0x01	; 1
     2e4:	6d 8d       	ldd	r22, Y+29	; 0x1d
     2e6:	7e 8d       	ldd	r23, Y+30	; 0x1e
     2e8:	8f 8d       	ldd	r24, Y+31	; 0x1f
     2ea:	98 a1       	ldd	r25, Y+32	; 0x20
     2ec:	20 e0       	ldi	r18, 0x00	; 0
     2ee:	30 e0       	ldi	r19, 0x00	; 0
     2f0:	4f e7       	ldi	r20, 0x7F	; 127
     2f2:	53 e4       	ldi	r21, 0x43	; 67
     2f4:	0e 94 48 06 	call	0xc90	; 0xc90 <__gtsf2>
     2f8:	18 16       	cp	r1, r24
     2fa:	0c f0       	brlt	.+2      	; 0x2fe <main+0x26c>
     2fc:	10 e0       	ldi	r17, 0x00	; 0
     2fe:	11 23       	and	r17, r17
     300:	09 f4       	brne	.+2      	; 0x304 <main+0x272>
     302:	89 c0       	rjmp	.+274    	; 0x416 <main+0x384>
	{
		_delay_ms(__us / 1000.0);
     304:	69 8d       	ldd	r22, Y+25	; 0x19
     306:	7a 8d       	ldd	r23, Y+26	; 0x1a
     308:	8b 8d       	ldd	r24, Y+27	; 0x1b
     30a:	9c 8d       	ldd	r25, Y+28	; 0x1c
     30c:	20 e0       	ldi	r18, 0x00	; 0
     30e:	30 e0       	ldi	r19, 0x00	; 0
     310:	4a e7       	ldi	r20, 0x7A	; 122
     312:	54 e4       	ldi	r21, 0x44	; 68
     314:	0e 94 9a 05 	call	0xb34	; 0xb34 <__divsf3>
     318:	dc 01       	movw	r26, r24
     31a:	cb 01       	movw	r24, r22
     31c:	8a a3       	std	Y+34, r24	; 0x22
     31e:	9b a3       	std	Y+35, r25	; 0x23
     320:	ac a3       	std	Y+36, r26	; 0x24
     322:	bd a3       	std	Y+37, r27	; 0x25
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     324:	6a a1       	ldd	r22, Y+34	; 0x22
     326:	7b a1       	ldd	r23, Y+35	; 0x23
     328:	8c a1       	ldd	r24, Y+36	; 0x24
     32a:	9d a1       	ldd	r25, Y+37	; 0x25
     32c:	20 e0       	ldi	r18, 0x00	; 0
     32e:	30 e0       	ldi	r19, 0x00	; 0
     330:	4a e7       	ldi	r20, 0x7A	; 122
     332:	55 e4       	ldi	r21, 0x45	; 69
     334:	0e 94 a0 04 	call	0x940	; 0x940 <__mulsf3>
     338:	dc 01       	movw	r26, r24
     33a:	cb 01       	movw	r24, r22
     33c:	8e a3       	std	Y+38, r24	; 0x26
     33e:	9f a3       	std	Y+39, r25	; 0x27
     340:	a8 a7       	std	Y+40, r26	; 0x28
     342:	b9 a7       	std	Y+41, r27	; 0x29
	if (__tmp < 1.0)
     344:	11 e0       	ldi	r17, 0x01	; 1
     346:	6e a1       	ldd	r22, Y+38	; 0x26
     348:	7f a1       	ldd	r23, Y+39	; 0x27
     34a:	88 a5       	ldd	r24, Y+40	; 0x28
     34c:	99 a5       	ldd	r25, Y+41	; 0x29
     34e:	20 e0       	ldi	r18, 0x00	; 0
     350:	30 e0       	ldi	r19, 0x00	; 0
     352:	40 e8       	ldi	r20, 0x80	; 128
     354:	5f e3       	ldi	r21, 0x3F	; 63
     356:	0e 94 a8 06 	call	0xd50	; 0xd50 <__ltsf2>
     35a:	88 23       	and	r24, r24
     35c:	0c f0       	brlt	.+2      	; 0x360 <main+0x2ce>
     35e:	10 e0       	ldi	r17, 0x00	; 0
     360:	11 23       	and	r17, r17
     362:	29 f0       	breq	.+10     	; 0x36e <main+0x2dc>
		__ticks = 1;
     364:	81 e0       	ldi	r24, 0x01	; 1
     366:	90 e0       	ldi	r25, 0x00	; 0
     368:	9b a7       	std	Y+43, r25	; 0x2b
     36a:	8a a7       	std	Y+42, r24	; 0x2a
     36c:	46 c0       	rjmp	.+140    	; 0x3fa <main+0x368>
	else if (__tmp > 65535)
     36e:	11 e0       	ldi	r17, 0x01	; 1
     370:	6e a1       	ldd	r22, Y+38	; 0x26
     372:	7f a1       	ldd	r23, Y+39	; 0x27
     374:	88 a5       	ldd	r24, Y+40	; 0x28
     376:	99 a5       	ldd	r25, Y+41	; 0x29
     378:	20 e0       	ldi	r18, 0x00	; 0
     37a:	3f ef       	ldi	r19, 0xFF	; 255
     37c:	4f e7       	ldi	r20, 0x7F	; 127
     37e:	57 e4       	ldi	r21, 0x47	; 71
     380:	0e 94 48 06 	call	0xc90	; 0xc90 <__gtsf2>
     384:	18 16       	cp	r1, r24
     386:	0c f0       	brlt	.+2      	; 0x38a <main+0x2f8>
     388:	10 e0       	ldi	r17, 0x00	; 0
     38a:	11 23       	and	r17, r17
     38c:	61 f1       	breq	.+88     	; 0x3e6 <main+0x354>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     38e:	6a a1       	ldd	r22, Y+34	; 0x22
     390:	7b a1       	ldd	r23, Y+35	; 0x23
     392:	8c a1       	ldd	r24, Y+36	; 0x24
     394:	9d a1       	ldd	r25, Y+37	; 0x25
     396:	20 e0       	ldi	r18, 0x00	; 0
     398:	30 e0       	ldi	r19, 0x00	; 0
     39a:	40 e2       	ldi	r20, 0x20	; 32
     39c:	51 e4       	ldi	r21, 0x41	; 65
     39e:	0e 94 a0 04 	call	0x940	; 0x940 <__mulsf3>
     3a2:	dc 01       	movw	r26, r24
     3a4:	cb 01       	movw	r24, r22
     3a6:	bc 01       	movw	r22, r24
     3a8:	cd 01       	movw	r24, r26
     3aa:	0e 94 cc 02 	call	0x598	; 0x598 <__fixunssfsi>
     3ae:	dc 01       	movw	r26, r24
     3b0:	cb 01       	movw	r24, r22
     3b2:	9b a7       	std	Y+43, r25	; 0x2b
     3b4:	8a a7       	std	Y+42, r24	; 0x2a
     3b6:	12 c0       	rjmp	.+36     	; 0x3dc <main+0x34a>
     3b8:	80 e9       	ldi	r24, 0x90	; 144
     3ba:	91 e0       	ldi	r25, 0x01	; 1
     3bc:	9d a7       	std	Y+45, r25	; 0x2d
     3be:	8c a7       	std	Y+44, r24	; 0x2c
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     3c0:	8c a5       	ldd	r24, Y+44	; 0x2c
     3c2:	9d a5       	ldd	r25, Y+45	; 0x2d
     3c4:	8c 01       	movw	r16, r24
     3c6:	c8 01       	movw	r24, r16
     3c8:	01 97       	sbiw	r24, 0x01	; 1
     3ca:	f1 f7       	brne	.-4      	; 0x3c8 <main+0x336>
     3cc:	8c 01       	movw	r16, r24
     3ce:	1d a7       	std	Y+45, r17	; 0x2d
     3d0:	0c a7       	std	Y+44, r16	; 0x2c
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     3d2:	8a a5       	ldd	r24, Y+42	; 0x2a
     3d4:	9b a5       	ldd	r25, Y+43	; 0x2b
     3d6:	01 97       	sbiw	r24, 0x01	; 1
     3d8:	9b a7       	std	Y+43, r25	; 0x2b
     3da:	8a a7       	std	Y+42, r24	; 0x2a
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     3dc:	8a a5       	ldd	r24, Y+42	; 0x2a
     3de:	9b a5       	ldd	r25, Y+43	; 0x2b
     3e0:	00 97       	sbiw	r24, 0x00	; 0
     3e2:	51 f7       	brne	.-44     	; 0x3b8 <main+0x326>
     3e4:	28 c0       	rjmp	.+80     	; 0x436 <main+0x3a4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     3e6:	6e a1       	ldd	r22, Y+38	; 0x26
     3e8:	7f a1       	ldd	r23, Y+39	; 0x27
     3ea:	88 a5       	ldd	r24, Y+40	; 0x28
     3ec:	99 a5       	ldd	r25, Y+41	; 0x29
     3ee:	0e 94 cc 02 	call	0x598	; 0x598 <__fixunssfsi>
     3f2:	dc 01       	movw	r26, r24
     3f4:	cb 01       	movw	r24, r22
     3f6:	9b a7       	std	Y+43, r25	; 0x2b
     3f8:	8a a7       	std	Y+42, r24	; 0x2a
     3fa:	8a a5       	ldd	r24, Y+42	; 0x2a
     3fc:	9b a5       	ldd	r25, Y+43	; 0x2b
     3fe:	9f a7       	std	Y+47, r25	; 0x2f
     400:	8e a7       	std	Y+46, r24	; 0x2e
     402:	8e a5       	ldd	r24, Y+46	; 0x2e
     404:	9f a5       	ldd	r25, Y+47	; 0x2f
     406:	8c 01       	movw	r16, r24
     408:	f8 01       	movw	r30, r16
     40a:	31 97       	sbiw	r30, 0x01	; 1
     40c:	f1 f7       	brne	.-4      	; 0x40a <main+0x378>
     40e:	8f 01       	movw	r16, r30
     410:	1f a7       	std	Y+47, r17	; 0x2f
     412:	0e a7       	std	Y+46, r16	; 0x2e
     414:	10 c0       	rjmp	.+32     	; 0x436 <main+0x3a4>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     416:	6d 8d       	ldd	r22, Y+29	; 0x1d
     418:	7e 8d       	ldd	r23, Y+30	; 0x1e
     41a:	8f 8d       	ldd	r24, Y+31	; 0x1f
     41c:	98 a1       	ldd	r25, Y+32	; 0x20
     41e:	0e 94 cc 02 	call	0x598	; 0x598 <__fixunssfsi>
     422:	dc 01       	movw	r26, r24
     424:	cb 01       	movw	r24, r22
     426:	89 a3       	std	Y+33, r24	; 0x21
     428:	89 a1       	ldd	r24, Y+33	; 0x21
     42a:	88 ab       	std	Y+48, r24	; 0x30
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     42c:	88 a9       	ldd	r24, Y+48	; 0x30
     42e:	18 2f       	mov	r17, r24
     430:	1a 95       	dec	r17
     432:	f1 f7       	brne	.-4      	; 0x430 <main+0x39e>
     434:	18 ab       	std	Y+48, r17	; 0x30
		_delay_us(1);
		PORTB |= (1<<PB0);															// CS auf High
     436:	88 e3       	ldi	r24, 0x38	; 56
     438:	90 e0       	ldi	r25, 0x00	; 0
     43a:	28 e3       	ldi	r18, 0x38	; 56
     43c:	30 e0       	ldi	r19, 0x00	; 0
     43e:	f9 01       	movw	r30, r18
     440:	20 81       	ld	r18, Z
     442:	21 60       	ori	r18, 0x01	; 1
     444:	fc 01       	movw	r30, r24
     446:	20 83       	st	Z, r18
     448:	80 e0       	ldi	r24, 0x00	; 0
     44a:	90 e0       	ldi	r25, 0x00	; 0
     44c:	aa e7       	ldi	r26, 0x7A	; 122
     44e:	b4 e4       	ldi	r27, 0x44	; 68
     450:	89 ab       	std	Y+49, r24	; 0x31
     452:	9a ab       	std	Y+50, r25	; 0x32
     454:	ab ab       	std	Y+51, r26	; 0x33
     456:	bc ab       	std	Y+52, r27	; 0x34
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     458:	69 a9       	ldd	r22, Y+49	; 0x31
     45a:	7a a9       	ldd	r23, Y+50	; 0x32
     45c:	8b a9       	ldd	r24, Y+51	; 0x33
     45e:	9c a9       	ldd	r25, Y+52	; 0x34
     460:	20 e0       	ldi	r18, 0x00	; 0
     462:	30 e0       	ldi	r19, 0x00	; 0
     464:	4a e7       	ldi	r20, 0x7A	; 122
     466:	55 e4       	ldi	r21, 0x45	; 69
     468:	0e 94 a0 04 	call	0x940	; 0x940 <__mulsf3>
     46c:	dc 01       	movw	r26, r24
     46e:	cb 01       	movw	r24, r22
     470:	8d ab       	std	Y+53, r24	; 0x35
     472:	9e ab       	std	Y+54, r25	; 0x36
     474:	af ab       	std	Y+55, r26	; 0x37
     476:	b8 af       	std	Y+56, r27	; 0x38
	if (__tmp < 1.0)
     478:	11 e0       	ldi	r17, 0x01	; 1
     47a:	6d a9       	ldd	r22, Y+53	; 0x35
     47c:	7e a9       	ldd	r23, Y+54	; 0x36
     47e:	8f a9       	ldd	r24, Y+55	; 0x37
     480:	98 ad       	ldd	r25, Y+56	; 0x38
     482:	20 e0       	ldi	r18, 0x00	; 0
     484:	30 e0       	ldi	r19, 0x00	; 0
     486:	40 e8       	ldi	r20, 0x80	; 128
     488:	5f e3       	ldi	r21, 0x3F	; 63
     48a:	0e 94 a8 06 	call	0xd50	; 0xd50 <__ltsf2>
     48e:	88 23       	and	r24, r24
     490:	0c f0       	brlt	.+2      	; 0x494 <main+0x402>
     492:	10 e0       	ldi	r17, 0x00	; 0
     494:	11 23       	and	r17, r17
     496:	29 f0       	breq	.+10     	; 0x4a2 <main+0x410>
		__ticks = 1;
     498:	81 e0       	ldi	r24, 0x01	; 1
     49a:	90 e0       	ldi	r25, 0x00	; 0
     49c:	9a af       	std	Y+58, r25	; 0x3a
     49e:	89 af       	std	Y+57, r24	; 0x39
     4a0:	46 c0       	rjmp	.+140    	; 0x52e <main+0x49c>
	else if (__tmp > 65535)
     4a2:	11 e0       	ldi	r17, 0x01	; 1
     4a4:	6d a9       	ldd	r22, Y+53	; 0x35
     4a6:	7e a9       	ldd	r23, Y+54	; 0x36
     4a8:	8f a9       	ldd	r24, Y+55	; 0x37
     4aa:	98 ad       	ldd	r25, Y+56	; 0x38
     4ac:	20 e0       	ldi	r18, 0x00	; 0
     4ae:	3f ef       	ldi	r19, 0xFF	; 255
     4b0:	4f e7       	ldi	r20, 0x7F	; 127
     4b2:	57 e4       	ldi	r21, 0x47	; 71
     4b4:	0e 94 48 06 	call	0xc90	; 0xc90 <__gtsf2>
     4b8:	18 16       	cp	r1, r24
     4ba:	0c f0       	brlt	.+2      	; 0x4be <main+0x42c>
     4bc:	10 e0       	ldi	r17, 0x00	; 0
     4be:	11 23       	and	r17, r17
     4c0:	61 f1       	breq	.+88     	; 0x51a <main+0x488>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     4c2:	69 a9       	ldd	r22, Y+49	; 0x31
     4c4:	7a a9       	ldd	r23, Y+50	; 0x32
     4c6:	8b a9       	ldd	r24, Y+51	; 0x33
     4c8:	9c a9       	ldd	r25, Y+52	; 0x34
     4ca:	20 e0       	ldi	r18, 0x00	; 0
     4cc:	30 e0       	ldi	r19, 0x00	; 0
     4ce:	40 e2       	ldi	r20, 0x20	; 32
     4d0:	51 e4       	ldi	r21, 0x41	; 65
     4d2:	0e 94 a0 04 	call	0x940	; 0x940 <__mulsf3>
     4d6:	dc 01       	movw	r26, r24
     4d8:	cb 01       	movw	r24, r22
     4da:	bc 01       	movw	r22, r24
     4dc:	cd 01       	movw	r24, r26
     4de:	0e 94 cc 02 	call	0x598	; 0x598 <__fixunssfsi>
     4e2:	dc 01       	movw	r26, r24
     4e4:	cb 01       	movw	r24, r22
     4e6:	9a af       	std	Y+58, r25	; 0x3a
     4e8:	89 af       	std	Y+57, r24	; 0x39
     4ea:	12 c0       	rjmp	.+36     	; 0x510 <main+0x47e>
     4ec:	80 e9       	ldi	r24, 0x90	; 144
     4ee:	91 e0       	ldi	r25, 0x01	; 1
     4f0:	9c af       	std	Y+60, r25	; 0x3c
     4f2:	8b af       	std	Y+59, r24	; 0x3b
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     4f4:	8b ad       	ldd	r24, Y+59	; 0x3b
     4f6:	9c ad       	ldd	r25, Y+60	; 0x3c
     4f8:	8c 01       	movw	r16, r24
     4fa:	c8 01       	movw	r24, r16
     4fc:	01 97       	sbiw	r24, 0x01	; 1
     4fe:	f1 f7       	brne	.-4      	; 0x4fc <main+0x46a>
     500:	8c 01       	movw	r16, r24
     502:	1c af       	std	Y+60, r17	; 0x3c
     504:	0b af       	std	Y+59, r16	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     506:	89 ad       	ldd	r24, Y+57	; 0x39
     508:	9a ad       	ldd	r25, Y+58	; 0x3a
     50a:	01 97       	sbiw	r24, 0x01	; 1
     50c:	9a af       	std	Y+58, r25	; 0x3a
     50e:	89 af       	std	Y+57, r24	; 0x39
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     510:	89 ad       	ldd	r24, Y+57	; 0x39
     512:	9a ad       	ldd	r25, Y+58	; 0x3a
     514:	00 97       	sbiw	r24, 0x00	; 0
     516:	51 f7       	brne	.-44     	; 0x4ec <main+0x45a>
     518:	17 c0       	rjmp	.+46     	; 0x548 <main+0x4b6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     51a:	6d a9       	ldd	r22, Y+53	; 0x35
     51c:	7e a9       	ldd	r23, Y+54	; 0x36
     51e:	8f a9       	ldd	r24, Y+55	; 0x37
     520:	98 ad       	ldd	r25, Y+56	; 0x38
     522:	0e 94 cc 02 	call	0x598	; 0x598 <__fixunssfsi>
     526:	dc 01       	movw	r26, r24
     528:	cb 01       	movw	r24, r22
     52a:	9a af       	std	Y+58, r25	; 0x3a
     52c:	89 af       	std	Y+57, r24	; 0x39
     52e:	89 ad       	ldd	r24, Y+57	; 0x39
     530:	9a ad       	ldd	r25, Y+58	; 0x3a
     532:	9e af       	std	Y+62, r25	; 0x3e
     534:	8d af       	std	Y+61, r24	; 0x3d
     536:	8d ad       	ldd	r24, Y+61	; 0x3d
     538:	9e ad       	ldd	r25, Y+62	; 0x3e
     53a:	8c 01       	movw	r16, r24
     53c:	f8 01       	movw	r30, r16
     53e:	31 97       	sbiw	r30, 0x01	; 1
     540:	f1 f7       	brne	.-4      	; 0x53e <main+0x4ac>
     542:	8f 01       	movw	r16, r30
     544:	1e af       	std	Y+62, r17	; 0x3e
     546:	0d af       	std	Y+61, r16	; 0x3d
		_delay_ms(1000);
		Daten++;
     548:	80 91 68 00 	lds	r24, 0x0068
     54c:	8f 5f       	subi	r24, 0xFF	; 255
     54e:	80 93 68 00 	sts	0x0068, r24
		
		if(Daten > 255)
		{
			Daten = 0x00;
		}		
    }
     552:	b7 cd       	rjmp	.-1170   	; 0xc2 <main+0x30>

00000554 <SPI_Init>:
}

void SPI_Init()
{
     554:	df 93       	push	r29
     556:	cf 93       	push	r28
     558:	cd b7       	in	r28, 0x3d	; 61
     55a:	de b7       	in	r29, 0x3e	; 62
	SPCR = (1<<SPE) | (1<<MSTR) | (1<<SPR0);										// SPE = SPI_Enable; MSTR = Master; SPR0 = f_sck/16 = 1MHz SCK Frequenz (16MHz Quarz)
     55c:	8d e2       	ldi	r24, 0x2D	; 45
     55e:	90 e0       	ldi	r25, 0x00	; 0
     560:	21 e5       	ldi	r18, 0x51	; 81
     562:	fc 01       	movw	r30, r24
     564:	20 83       	st	Z, r18
	
}
     566:	cf 91       	pop	r28
     568:	df 91       	pop	r29
     56a:	08 95       	ret

0000056c <SPI_Send>:

void SPI_Send(char Senden)
{	
     56c:	df 93       	push	r29
     56e:	cf 93       	push	r28
     570:	0f 92       	push	r0
     572:	cd b7       	in	r28, 0x3d	; 61
     574:	de b7       	in	r29, 0x3e	; 62
     576:	89 83       	std	Y+1, r24	; 0x01
	SPDR = Senden;																	// Daten schicken
     578:	8f e2       	ldi	r24, 0x2F	; 47
     57a:	90 e0       	ldi	r25, 0x00	; 0
     57c:	29 81       	ldd	r18, Y+1	; 0x01
     57e:	fc 01       	movw	r30, r24
     580:	20 83       	st	Z, r18
    while(!(SPSR & (1<<SPIF)));                                         	
     582:	00 00       	nop
     584:	8e e2       	ldi	r24, 0x2E	; 46
     586:	90 e0       	ldi	r25, 0x00	; 0
     588:	fc 01       	movw	r30, r24
     58a:	80 81       	ld	r24, Z
     58c:	88 23       	and	r24, r24
     58e:	d4 f7       	brge	.-12     	; 0x584 <SPI_Send+0x18>
     590:	0f 90       	pop	r0
     592:	cf 91       	pop	r28
     594:	df 91       	pop	r29
     596:	08 95       	ret

00000598 <__fixunssfsi>:
     598:	ef 92       	push	r14
     59a:	ff 92       	push	r15
     59c:	0f 93       	push	r16
     59e:	1f 93       	push	r17
     5a0:	7b 01       	movw	r14, r22
     5a2:	8c 01       	movw	r16, r24
     5a4:	20 e0       	ldi	r18, 0x00	; 0
     5a6:	30 e0       	ldi	r19, 0x00	; 0
     5a8:	40 e0       	ldi	r20, 0x00	; 0
     5aa:	5f e4       	ldi	r21, 0x4F	; 79
     5ac:	0e 94 78 06 	call	0xcf0	; 0xcf0 <__gesf2>
     5b0:	87 fd       	sbrc	r24, 7
     5b2:	11 c0       	rjmp	.+34     	; 0x5d6 <__fixunssfsi+0x3e>
     5b4:	c8 01       	movw	r24, r16
     5b6:	b7 01       	movw	r22, r14
     5b8:	20 e0       	ldi	r18, 0x00	; 0
     5ba:	30 e0       	ldi	r19, 0x00	; 0
     5bc:	40 e0       	ldi	r20, 0x00	; 0
     5be:	5f e4       	ldi	r21, 0x4F	; 79
     5c0:	0e 94 6f 04 	call	0x8de	; 0x8de <__subsf3>
     5c4:	0e 94 d8 06 	call	0xdb0	; 0xdb0 <__fixsfsi>
     5c8:	9b 01       	movw	r18, r22
     5ca:	ac 01       	movw	r20, r24
     5cc:	20 50       	subi	r18, 0x00	; 0
     5ce:	30 40       	sbci	r19, 0x00	; 0
     5d0:	40 40       	sbci	r20, 0x00	; 0
     5d2:	50 48       	sbci	r21, 0x80	; 128
     5d4:	06 c0       	rjmp	.+12     	; 0x5e2 <__fixunssfsi+0x4a>
     5d6:	c8 01       	movw	r24, r16
     5d8:	b7 01       	movw	r22, r14
     5da:	0e 94 d8 06 	call	0xdb0	; 0xdb0 <__fixsfsi>
     5de:	9b 01       	movw	r18, r22
     5e0:	ac 01       	movw	r20, r24
     5e2:	b9 01       	movw	r22, r18
     5e4:	ca 01       	movw	r24, r20
     5e6:	1f 91       	pop	r17
     5e8:	0f 91       	pop	r16
     5ea:	ff 90       	pop	r15
     5ec:	ef 90       	pop	r14
     5ee:	08 95       	ret

000005f0 <_fpadd_parts>:
     5f0:	a0 e0       	ldi	r26, 0x00	; 0
     5f2:	b0 e0       	ldi	r27, 0x00	; 0
     5f4:	ee ef       	ldi	r30, 0xFE	; 254
     5f6:	f2 e0       	ldi	r31, 0x02	; 2
     5f8:	0c 94 be 08 	jmp	0x117c	; 0x117c <__prologue_saves__+0x8>
     5fc:	fc 01       	movw	r30, r24
     5fe:	ea 01       	movw	r28, r20
     600:	80 81       	ld	r24, Z
     602:	82 30       	cpi	r24, 0x02	; 2
     604:	08 f4       	brcc	.+2      	; 0x608 <_fpadd_parts+0x18>
     606:	38 c1       	rjmp	.+624    	; 0x878 <__stack+0x19>
     608:	db 01       	movw	r26, r22
     60a:	9c 91       	ld	r25, X
     60c:	92 30       	cpi	r25, 0x02	; 2
     60e:	08 f4       	brcc	.+2      	; 0x612 <_fpadd_parts+0x22>
     610:	30 c1       	rjmp	.+608    	; 0x872 <__stack+0x13>
     612:	84 30       	cpi	r24, 0x04	; 4
     614:	59 f4       	brne	.+22     	; 0x62c <_fpadd_parts+0x3c>
     616:	94 30       	cpi	r25, 0x04	; 4
     618:	09 f0       	breq	.+2      	; 0x61c <_fpadd_parts+0x2c>
     61a:	2e c1       	rjmp	.+604    	; 0x878 <__stack+0x19>
     61c:	91 81       	ldd	r25, Z+1	; 0x01
     61e:	11 96       	adiw	r26, 0x01	; 1
     620:	8c 91       	ld	r24, X
     622:	11 97       	sbiw	r26, 0x01	; 1
     624:	98 17       	cp	r25, r24
     626:	09 f0       	breq	.+2      	; 0x62a <_fpadd_parts+0x3a>
     628:	21 c1       	rjmp	.+578    	; 0x86c <__stack+0xd>
     62a:	26 c1       	rjmp	.+588    	; 0x878 <__stack+0x19>
     62c:	94 30       	cpi	r25, 0x04	; 4
     62e:	09 f4       	brne	.+2      	; 0x632 <_fpadd_parts+0x42>
     630:	20 c1       	rjmp	.+576    	; 0x872 <__stack+0x13>
     632:	92 30       	cpi	r25, 0x02	; 2
     634:	b1 f4       	brne	.+44     	; 0x662 <_fpadd_parts+0x72>
     636:	82 30       	cpi	r24, 0x02	; 2
     638:	09 f0       	breq	.+2      	; 0x63c <_fpadd_parts+0x4c>
     63a:	1e c1       	rjmp	.+572    	; 0x878 <__stack+0x19>
     63c:	ca 01       	movw	r24, r20
     63e:	af 01       	movw	r20, r30
     640:	28 e0       	ldi	r18, 0x08	; 8
     642:	da 01       	movw	r26, r20
     644:	0d 90       	ld	r0, X+
     646:	ad 01       	movw	r20, r26
     648:	dc 01       	movw	r26, r24
     64a:	0d 92       	st	X+, r0
     64c:	cd 01       	movw	r24, r26
     64e:	21 50       	subi	r18, 0x01	; 1
     650:	c1 f7       	brne	.-16     	; 0x642 <_fpadd_parts+0x52>
     652:	db 01       	movw	r26, r22
     654:	11 96       	adiw	r26, 0x01	; 1
     656:	8c 91       	ld	r24, X
     658:	11 97       	sbiw	r26, 0x01	; 1
     65a:	91 81       	ldd	r25, Z+1	; 0x01
     65c:	89 23       	and	r24, r25
     65e:	89 83       	std	Y+1, r24	; 0x01
     660:	0a c1       	rjmp	.+532    	; 0x876 <__stack+0x17>
     662:	82 30       	cpi	r24, 0x02	; 2
     664:	09 f4       	brne	.+2      	; 0x668 <_fpadd_parts+0x78>
     666:	05 c1       	rjmp	.+522    	; 0x872 <__stack+0x13>
     668:	c2 80       	ldd	r12, Z+2	; 0x02
     66a:	d3 80       	ldd	r13, Z+3	; 0x03
     66c:	db 01       	movw	r26, r22
     66e:	12 96       	adiw	r26, 0x02	; 2
     670:	6d 90       	ld	r6, X+
     672:	7c 90       	ld	r7, X
     674:	13 97       	sbiw	r26, 0x03	; 3
     676:	24 81       	ldd	r18, Z+4	; 0x04
     678:	35 81       	ldd	r19, Z+5	; 0x05
     67a:	46 81       	ldd	r20, Z+6	; 0x06
     67c:	57 81       	ldd	r21, Z+7	; 0x07
     67e:	14 96       	adiw	r26, 0x04	; 4
     680:	ed 90       	ld	r14, X+
     682:	fd 90       	ld	r15, X+
     684:	0d 91       	ld	r16, X+
     686:	1c 91       	ld	r17, X
     688:	17 97       	sbiw	r26, 0x07	; 7
     68a:	c6 01       	movw	r24, r12
     68c:	86 19       	sub	r24, r6
     68e:	97 09       	sbc	r25, r7
     690:	5c 01       	movw	r10, r24
     692:	97 ff       	sbrs	r25, 7
     694:	04 c0       	rjmp	.+8      	; 0x69e <_fpadd_parts+0xae>
     696:	aa 24       	eor	r10, r10
     698:	bb 24       	eor	r11, r11
     69a:	a8 1a       	sub	r10, r24
     69c:	b9 0a       	sbc	r11, r25
     69e:	b0 e2       	ldi	r27, 0x20	; 32
     6a0:	ab 16       	cp	r10, r27
     6a2:	b1 04       	cpc	r11, r1
     6a4:	0c f0       	brlt	.+2      	; 0x6a8 <_fpadd_parts+0xb8>
     6a6:	61 c0       	rjmp	.+194    	; 0x76a <_fpadd_parts+0x17a>
     6a8:	18 16       	cp	r1, r24
     6aa:	19 06       	cpc	r1, r25
     6ac:	6c f5       	brge	.+90     	; 0x708 <_fpadd_parts+0x118>
     6ae:	37 01       	movw	r6, r14
     6b0:	48 01       	movw	r8, r16
     6b2:	0a 2c       	mov	r0, r10
     6b4:	04 c0       	rjmp	.+8      	; 0x6be <_fpadd_parts+0xce>
     6b6:	96 94       	lsr	r9
     6b8:	87 94       	ror	r8
     6ba:	77 94       	ror	r7
     6bc:	67 94       	ror	r6
     6be:	0a 94       	dec	r0
     6c0:	d2 f7       	brpl	.-12     	; 0x6b6 <_fpadd_parts+0xc6>
     6c2:	81 e0       	ldi	r24, 0x01	; 1
     6c4:	90 e0       	ldi	r25, 0x00	; 0
     6c6:	a0 e0       	ldi	r26, 0x00	; 0
     6c8:	b0 e0       	ldi	r27, 0x00	; 0
     6ca:	0a 2c       	mov	r0, r10
     6cc:	04 c0       	rjmp	.+8      	; 0x6d6 <_fpadd_parts+0xe6>
     6ce:	88 0f       	add	r24, r24
     6d0:	99 1f       	adc	r25, r25
     6d2:	aa 1f       	adc	r26, r26
     6d4:	bb 1f       	adc	r27, r27
     6d6:	0a 94       	dec	r0
     6d8:	d2 f7       	brpl	.-12     	; 0x6ce <_fpadd_parts+0xde>
     6da:	01 97       	sbiw	r24, 0x01	; 1
     6dc:	a1 09       	sbc	r26, r1
     6de:	b1 09       	sbc	r27, r1
     6e0:	8e 21       	and	r24, r14
     6e2:	9f 21       	and	r25, r15
     6e4:	a0 23       	and	r26, r16
     6e6:	b1 23       	and	r27, r17
     6e8:	ee 24       	eor	r14, r14
     6ea:	ff 24       	eor	r15, r15
     6ec:	87 01       	movw	r16, r14
     6ee:	e3 94       	inc	r14
     6f0:	00 97       	sbiw	r24, 0x00	; 0
     6f2:	a1 05       	cpc	r26, r1
     6f4:	b1 05       	cpc	r27, r1
     6f6:	19 f4       	brne	.+6      	; 0x6fe <_fpadd_parts+0x10e>
     6f8:	ee 24       	eor	r14, r14
     6fa:	ff 24       	eor	r15, r15
     6fc:	87 01       	movw	r16, r14
     6fe:	e6 28       	or	r14, r6
     700:	f7 28       	or	r15, r7
     702:	08 29       	or	r16, r8
     704:	19 29       	or	r17, r9
     706:	3c c0       	rjmp	.+120    	; 0x780 <_fpadd_parts+0x190>
     708:	00 97       	sbiw	r24, 0x00	; 0
     70a:	d1 f1       	breq	.+116    	; 0x780 <_fpadd_parts+0x190>
     70c:	ca 0c       	add	r12, r10
     70e:	db 1c       	adc	r13, r11
     710:	39 01       	movw	r6, r18
     712:	4a 01       	movw	r8, r20
     714:	0a 2c       	mov	r0, r10
     716:	04 c0       	rjmp	.+8      	; 0x720 <_fpadd_parts+0x130>
     718:	96 94       	lsr	r9
     71a:	87 94       	ror	r8
     71c:	77 94       	ror	r7
     71e:	67 94       	ror	r6
     720:	0a 94       	dec	r0
     722:	d2 f7       	brpl	.-12     	; 0x718 <_fpadd_parts+0x128>
     724:	81 e0       	ldi	r24, 0x01	; 1
     726:	90 e0       	ldi	r25, 0x00	; 0
     728:	a0 e0       	ldi	r26, 0x00	; 0
     72a:	b0 e0       	ldi	r27, 0x00	; 0
     72c:	0a 2c       	mov	r0, r10
     72e:	04 c0       	rjmp	.+8      	; 0x738 <_fpadd_parts+0x148>
     730:	88 0f       	add	r24, r24
     732:	99 1f       	adc	r25, r25
     734:	aa 1f       	adc	r26, r26
     736:	bb 1f       	adc	r27, r27
     738:	0a 94       	dec	r0
     73a:	d2 f7       	brpl	.-12     	; 0x730 <_fpadd_parts+0x140>
     73c:	01 97       	sbiw	r24, 0x01	; 1
     73e:	a1 09       	sbc	r26, r1
     740:	b1 09       	sbc	r27, r1
     742:	82 23       	and	r24, r18
     744:	93 23       	and	r25, r19
     746:	a4 23       	and	r26, r20
     748:	b5 23       	and	r27, r21
     74a:	21 e0       	ldi	r18, 0x01	; 1
     74c:	30 e0       	ldi	r19, 0x00	; 0
     74e:	40 e0       	ldi	r20, 0x00	; 0
     750:	50 e0       	ldi	r21, 0x00	; 0
     752:	00 97       	sbiw	r24, 0x00	; 0
     754:	a1 05       	cpc	r26, r1
     756:	b1 05       	cpc	r27, r1
     758:	19 f4       	brne	.+6      	; 0x760 <_fpadd_parts+0x170>
     75a:	20 e0       	ldi	r18, 0x00	; 0
     75c:	30 e0       	ldi	r19, 0x00	; 0
     75e:	a9 01       	movw	r20, r18
     760:	26 29       	or	r18, r6
     762:	37 29       	or	r19, r7
     764:	48 29       	or	r20, r8
     766:	59 29       	or	r21, r9
     768:	0b c0       	rjmp	.+22     	; 0x780 <_fpadd_parts+0x190>
     76a:	6c 14       	cp	r6, r12
     76c:	7d 04       	cpc	r7, r13
     76e:	24 f4       	brge	.+8      	; 0x778 <_fpadd_parts+0x188>
     770:	ee 24       	eor	r14, r14
     772:	ff 24       	eor	r15, r15
     774:	87 01       	movw	r16, r14
     776:	04 c0       	rjmp	.+8      	; 0x780 <_fpadd_parts+0x190>
     778:	63 01       	movw	r12, r6
     77a:	20 e0       	ldi	r18, 0x00	; 0
     77c:	30 e0       	ldi	r19, 0x00	; 0
     77e:	a9 01       	movw	r20, r18
     780:	81 81       	ldd	r24, Z+1	; 0x01
     782:	fb 01       	movw	r30, r22
     784:	91 81       	ldd	r25, Z+1	; 0x01
     786:	89 17       	cp	r24, r25
     788:	09 f4       	brne	.+2      	; 0x78c <_fpadd_parts+0x19c>
     78a:	45 c0       	rjmp	.+138    	; 0x816 <_fpadd_parts+0x226>
     78c:	88 23       	and	r24, r24
     78e:	49 f0       	breq	.+18     	; 0x7a2 <_fpadd_parts+0x1b2>
     790:	d8 01       	movw	r26, r16
     792:	c7 01       	movw	r24, r14
     794:	82 1b       	sub	r24, r18
     796:	93 0b       	sbc	r25, r19
     798:	a4 0b       	sbc	r26, r20
     79a:	b5 0b       	sbc	r27, r21
     79c:	9c 01       	movw	r18, r24
     79e:	ad 01       	movw	r20, r26
     7a0:	04 c0       	rjmp	.+8      	; 0x7aa <_fpadd_parts+0x1ba>
     7a2:	2e 19       	sub	r18, r14
     7a4:	3f 09       	sbc	r19, r15
     7a6:	40 0b       	sbc	r20, r16
     7a8:	51 0b       	sbc	r21, r17
     7aa:	57 fd       	sbrc	r21, 7
     7ac:	04 c0       	rjmp	.+8      	; 0x7b6 <_fpadd_parts+0x1c6>
     7ae:	19 82       	std	Y+1, r1	; 0x01
     7b0:	db 82       	std	Y+3, r13	; 0x03
     7b2:	ca 82       	std	Y+2, r12	; 0x02
     7b4:	0b c0       	rjmp	.+22     	; 0x7cc <_fpadd_parts+0x1dc>
     7b6:	81 e0       	ldi	r24, 0x01	; 1
     7b8:	89 83       	std	Y+1, r24	; 0x01
     7ba:	db 82       	std	Y+3, r13	; 0x03
     7bc:	ca 82       	std	Y+2, r12	; 0x02
     7be:	50 95       	com	r21
     7c0:	40 95       	com	r20
     7c2:	30 95       	com	r19
     7c4:	21 95       	neg	r18
     7c6:	3f 4f       	sbci	r19, 0xFF	; 255
     7c8:	4f 4f       	sbci	r20, 0xFF	; 255
     7ca:	5f 4f       	sbci	r21, 0xFF	; 255
     7cc:	2c 83       	std	Y+4, r18	; 0x04
     7ce:	3d 83       	std	Y+5, r19	; 0x05
     7d0:	4e 83       	std	Y+6, r20	; 0x06
     7d2:	5f 83       	std	Y+7, r21	; 0x07
     7d4:	0d c0       	rjmp	.+26     	; 0x7f0 <_fpadd_parts+0x200>
     7d6:	88 0f       	add	r24, r24
     7d8:	99 1f       	adc	r25, r25
     7da:	aa 1f       	adc	r26, r26
     7dc:	bb 1f       	adc	r27, r27
     7de:	8c 83       	std	Y+4, r24	; 0x04
     7e0:	9d 83       	std	Y+5, r25	; 0x05
     7e2:	ae 83       	std	Y+6, r26	; 0x06
     7e4:	bf 83       	std	Y+7, r27	; 0x07
     7e6:	8a 81       	ldd	r24, Y+2	; 0x02
     7e8:	9b 81       	ldd	r25, Y+3	; 0x03
     7ea:	01 97       	sbiw	r24, 0x01	; 1
     7ec:	9b 83       	std	Y+3, r25	; 0x03
     7ee:	8a 83       	std	Y+2, r24	; 0x02
     7f0:	8c 81       	ldd	r24, Y+4	; 0x04
     7f2:	9d 81       	ldd	r25, Y+5	; 0x05
     7f4:	ae 81       	ldd	r26, Y+6	; 0x06
     7f6:	bf 81       	ldd	r27, Y+7	; 0x07
     7f8:	9c 01       	movw	r18, r24
     7fa:	ad 01       	movw	r20, r26
     7fc:	21 50       	subi	r18, 0x01	; 1
     7fe:	30 40       	sbci	r19, 0x00	; 0
     800:	40 40       	sbci	r20, 0x00	; 0
     802:	50 40       	sbci	r21, 0x00	; 0
     804:	2f 3f       	cpi	r18, 0xFF	; 255
     806:	ef ef       	ldi	r30, 0xFF	; 255
     808:	3e 07       	cpc	r19, r30
     80a:	ef ef       	ldi	r30, 0xFF	; 255
     80c:	4e 07       	cpc	r20, r30
     80e:	ef e3       	ldi	r30, 0x3F	; 63
     810:	5e 07       	cpc	r21, r30
     812:	08 f3       	brcs	.-62     	; 0x7d6 <_fpadd_parts+0x1e6>
     814:	0b c0       	rjmp	.+22     	; 0x82c <_fpadd_parts+0x23c>
     816:	89 83       	std	Y+1, r24	; 0x01
     818:	db 82       	std	Y+3, r13	; 0x03
     81a:	ca 82       	std	Y+2, r12	; 0x02
     81c:	2e 0d       	add	r18, r14
     81e:	3f 1d       	adc	r19, r15
     820:	40 1f       	adc	r20, r16
     822:	51 1f       	adc	r21, r17
     824:	2c 83       	std	Y+4, r18	; 0x04
     826:	3d 83       	std	Y+5, r19	; 0x05
     828:	4e 83       	std	Y+6, r20	; 0x06
     82a:	5f 83       	std	Y+7, r21	; 0x07
     82c:	83 e0       	ldi	r24, 0x03	; 3
     82e:	88 83       	st	Y, r24
     830:	2c 81       	ldd	r18, Y+4	; 0x04
     832:	3d 81       	ldd	r19, Y+5	; 0x05
     834:	4e 81       	ldd	r20, Y+6	; 0x06
     836:	5f 81       	ldd	r21, Y+7	; 0x07
     838:	57 ff       	sbrs	r21, 7
     83a:	1d c0       	rjmp	.+58     	; 0x876 <__stack+0x17>
     83c:	da 01       	movw	r26, r20
     83e:	c9 01       	movw	r24, r18
     840:	81 70       	andi	r24, 0x01	; 1
     842:	90 70       	andi	r25, 0x00	; 0
     844:	a0 70       	andi	r26, 0x00	; 0
     846:	b0 70       	andi	r27, 0x00	; 0
     848:	56 95       	lsr	r21
     84a:	47 95       	ror	r20
     84c:	37 95       	ror	r19
     84e:	27 95       	ror	r18
     850:	82 2b       	or	r24, r18
     852:	93 2b       	or	r25, r19
     854:	a4 2b       	or	r26, r20
     856:	b5 2b       	or	r27, r21
     858:	8c 83       	std	Y+4, r24	; 0x04
     85a:	9d 83       	std	Y+5, r25	; 0x05
     85c:	ae 83       	std	Y+6, r26	; 0x06
     85e:	bf 83       	std	Y+7, r27	; 0x07
     860:	8a 81       	ldd	r24, Y+2	; 0x02
     862:	9b 81       	ldd	r25, Y+3	; 0x03
     864:	01 96       	adiw	r24, 0x01	; 1
     866:	9b 83       	std	Y+3, r25	; 0x03
     868:	8a 83       	std	Y+2, r24	; 0x02
     86a:	05 c0       	rjmp	.+10     	; 0x876 <__stack+0x17>
     86c:	e0 e6       	ldi	r30, 0x60	; 96
     86e:	f0 e0       	ldi	r31, 0x00	; 0
     870:	03 c0       	rjmp	.+6      	; 0x878 <__stack+0x19>
     872:	fb 01       	movw	r30, r22
     874:	01 c0       	rjmp	.+2      	; 0x878 <__stack+0x19>
     876:	fe 01       	movw	r30, r28
     878:	cf 01       	movw	r24, r30
     87a:	cd b7       	in	r28, 0x3d	; 61
     87c:	de b7       	in	r29, 0x3e	; 62
     87e:	ee e0       	ldi	r30, 0x0E	; 14
     880:	0c 94 da 08 	jmp	0x11b4	; 0x11b4 <__epilogue_restores__+0x8>

00000884 <__addsf3>:
     884:	a0 e2       	ldi	r26, 0x20	; 32
     886:	b0 e0       	ldi	r27, 0x00	; 0
     888:	e8 e4       	ldi	r30, 0x48	; 72
     88a:	f4 e0       	ldi	r31, 0x04	; 4
     88c:	0c 94 c6 08 	jmp	0x118c	; 0x118c <__prologue_saves__+0x18>
     890:	69 83       	std	Y+1, r22	; 0x01
     892:	7a 83       	std	Y+2, r23	; 0x02
     894:	8b 83       	std	Y+3, r24	; 0x03
     896:	9c 83       	std	Y+4, r25	; 0x04
     898:	2d 83       	std	Y+5, r18	; 0x05
     89a:	3e 83       	std	Y+6, r19	; 0x06
     89c:	4f 83       	std	Y+7, r20	; 0x07
     89e:	58 87       	std	Y+8, r21	; 0x08
     8a0:	89 e0       	ldi	r24, 0x09	; 9
     8a2:	e8 2e       	mov	r14, r24
     8a4:	f1 2c       	mov	r15, r1
     8a6:	ec 0e       	add	r14, r28
     8a8:	fd 1e       	adc	r15, r29
     8aa:	ce 01       	movw	r24, r28
     8ac:	01 96       	adiw	r24, 0x01	; 1
     8ae:	b7 01       	movw	r22, r14
     8b0:	0e 94 f8 07 	call	0xff0	; 0xff0 <__unpack_f>
     8b4:	8e 01       	movw	r16, r28
     8b6:	0f 5e       	subi	r16, 0xEF	; 239
     8b8:	1f 4f       	sbci	r17, 0xFF	; 255
     8ba:	ce 01       	movw	r24, r28
     8bc:	05 96       	adiw	r24, 0x05	; 5
     8be:	b8 01       	movw	r22, r16
     8c0:	0e 94 f8 07 	call	0xff0	; 0xff0 <__unpack_f>
     8c4:	c7 01       	movw	r24, r14
     8c6:	b8 01       	movw	r22, r16
     8c8:	ae 01       	movw	r20, r28
     8ca:	47 5e       	subi	r20, 0xE7	; 231
     8cc:	5f 4f       	sbci	r21, 0xFF	; 255
     8ce:	0e 94 f8 02 	call	0x5f0	; 0x5f0 <_fpadd_parts>
     8d2:	0e 94 2a 07 	call	0xe54	; 0xe54 <__pack_f>
     8d6:	a0 96       	adiw	r28, 0x20	; 32
     8d8:	e6 e0       	ldi	r30, 0x06	; 6
     8da:	0c 94 e2 08 	jmp	0x11c4	; 0x11c4 <__epilogue_restores__+0x18>

000008de <__subsf3>:
     8de:	a0 e2       	ldi	r26, 0x20	; 32
     8e0:	b0 e0       	ldi	r27, 0x00	; 0
     8e2:	e5 e7       	ldi	r30, 0x75	; 117
     8e4:	f4 e0       	ldi	r31, 0x04	; 4
     8e6:	0c 94 c6 08 	jmp	0x118c	; 0x118c <__prologue_saves__+0x18>
     8ea:	69 83       	std	Y+1, r22	; 0x01
     8ec:	7a 83       	std	Y+2, r23	; 0x02
     8ee:	8b 83       	std	Y+3, r24	; 0x03
     8f0:	9c 83       	std	Y+4, r25	; 0x04
     8f2:	2d 83       	std	Y+5, r18	; 0x05
     8f4:	3e 83       	std	Y+6, r19	; 0x06
     8f6:	4f 83       	std	Y+7, r20	; 0x07
     8f8:	58 87       	std	Y+8, r21	; 0x08
     8fa:	8e 01       	movw	r16, r28
     8fc:	07 5f       	subi	r16, 0xF7	; 247
     8fe:	1f 4f       	sbci	r17, 0xFF	; 255
     900:	ce 01       	movw	r24, r28
     902:	01 96       	adiw	r24, 0x01	; 1
     904:	b8 01       	movw	r22, r16
     906:	0e 94 f8 07 	call	0xff0	; 0xff0 <__unpack_f>
     90a:	91 e1       	ldi	r25, 0x11	; 17
     90c:	e9 2e       	mov	r14, r25
     90e:	f1 2c       	mov	r15, r1
     910:	ec 0e       	add	r14, r28
     912:	fd 1e       	adc	r15, r29
     914:	ce 01       	movw	r24, r28
     916:	05 96       	adiw	r24, 0x05	; 5
     918:	b7 01       	movw	r22, r14
     91a:	0e 94 f8 07 	call	0xff0	; 0xff0 <__unpack_f>
     91e:	8a 89       	ldd	r24, Y+18	; 0x12
     920:	91 e0       	ldi	r25, 0x01	; 1
     922:	89 27       	eor	r24, r25
     924:	8a 8b       	std	Y+18, r24	; 0x12
     926:	c8 01       	movw	r24, r16
     928:	b7 01       	movw	r22, r14
     92a:	ae 01       	movw	r20, r28
     92c:	47 5e       	subi	r20, 0xE7	; 231
     92e:	5f 4f       	sbci	r21, 0xFF	; 255
     930:	0e 94 f8 02 	call	0x5f0	; 0x5f0 <_fpadd_parts>
     934:	0e 94 2a 07 	call	0xe54	; 0xe54 <__pack_f>
     938:	a0 96       	adiw	r28, 0x20	; 32
     93a:	e6 e0       	ldi	r30, 0x06	; 6
     93c:	0c 94 e2 08 	jmp	0x11c4	; 0x11c4 <__epilogue_restores__+0x18>

00000940 <__mulsf3>:
     940:	a0 e2       	ldi	r26, 0x20	; 32
     942:	b0 e0       	ldi	r27, 0x00	; 0
     944:	e6 ea       	ldi	r30, 0xA6	; 166
     946:	f4 e0       	ldi	r31, 0x04	; 4
     948:	0c 94 ba 08 	jmp	0x1174	; 0x1174 <__prologue_saves__>
     94c:	69 83       	std	Y+1, r22	; 0x01
     94e:	7a 83       	std	Y+2, r23	; 0x02
     950:	8b 83       	std	Y+3, r24	; 0x03
     952:	9c 83       	std	Y+4, r25	; 0x04
     954:	2d 83       	std	Y+5, r18	; 0x05
     956:	3e 83       	std	Y+6, r19	; 0x06
     958:	4f 83       	std	Y+7, r20	; 0x07
     95a:	58 87       	std	Y+8, r21	; 0x08
     95c:	ce 01       	movw	r24, r28
     95e:	01 96       	adiw	r24, 0x01	; 1
     960:	be 01       	movw	r22, r28
     962:	67 5f       	subi	r22, 0xF7	; 247
     964:	7f 4f       	sbci	r23, 0xFF	; 255
     966:	0e 94 f8 07 	call	0xff0	; 0xff0 <__unpack_f>
     96a:	ce 01       	movw	r24, r28
     96c:	05 96       	adiw	r24, 0x05	; 5
     96e:	be 01       	movw	r22, r28
     970:	6f 5e       	subi	r22, 0xEF	; 239
     972:	7f 4f       	sbci	r23, 0xFF	; 255
     974:	0e 94 f8 07 	call	0xff0	; 0xff0 <__unpack_f>
     978:	99 85       	ldd	r25, Y+9	; 0x09
     97a:	92 30       	cpi	r25, 0x02	; 2
     97c:	78 f0       	brcs	.+30     	; 0x99c <__mulsf3+0x5c>
     97e:	89 89       	ldd	r24, Y+17	; 0x11
     980:	82 30       	cpi	r24, 0x02	; 2
     982:	c0 f0       	brcs	.+48     	; 0x9b4 <__mulsf3+0x74>
     984:	94 30       	cpi	r25, 0x04	; 4
     986:	19 f4       	brne	.+6      	; 0x98e <__mulsf3+0x4e>
     988:	82 30       	cpi	r24, 0x02	; 2
     98a:	41 f4       	brne	.+16     	; 0x99c <__mulsf3+0x5c>
     98c:	cb c0       	rjmp	.+406    	; 0xb24 <__mulsf3+0x1e4>
     98e:	84 30       	cpi	r24, 0x04	; 4
     990:	19 f4       	brne	.+6      	; 0x998 <__mulsf3+0x58>
     992:	92 30       	cpi	r25, 0x02	; 2
     994:	79 f4       	brne	.+30     	; 0x9b4 <__mulsf3+0x74>
     996:	c6 c0       	rjmp	.+396    	; 0xb24 <__mulsf3+0x1e4>
     998:	92 30       	cpi	r25, 0x02	; 2
     99a:	51 f4       	brne	.+20     	; 0x9b0 <__mulsf3+0x70>
     99c:	81 e0       	ldi	r24, 0x01	; 1
     99e:	2a 85       	ldd	r18, Y+10	; 0x0a
     9a0:	9a 89       	ldd	r25, Y+18	; 0x12
     9a2:	29 17       	cp	r18, r25
     9a4:	09 f4       	brne	.+2      	; 0x9a8 <__mulsf3+0x68>
     9a6:	80 e0       	ldi	r24, 0x00	; 0
     9a8:	8a 87       	std	Y+10, r24	; 0x0a
     9aa:	ce 01       	movw	r24, r28
     9ac:	09 96       	adiw	r24, 0x09	; 9
     9ae:	bc c0       	rjmp	.+376    	; 0xb28 <__mulsf3+0x1e8>
     9b0:	82 30       	cpi	r24, 0x02	; 2
     9b2:	51 f4       	brne	.+20     	; 0x9c8 <__mulsf3+0x88>
     9b4:	81 e0       	ldi	r24, 0x01	; 1
     9b6:	2a 85       	ldd	r18, Y+10	; 0x0a
     9b8:	9a 89       	ldd	r25, Y+18	; 0x12
     9ba:	29 17       	cp	r18, r25
     9bc:	09 f4       	brne	.+2      	; 0x9c0 <__mulsf3+0x80>
     9be:	80 e0       	ldi	r24, 0x00	; 0
     9c0:	8a 8b       	std	Y+18, r24	; 0x12
     9c2:	ce 01       	movw	r24, r28
     9c4:	41 96       	adiw	r24, 0x11	; 17
     9c6:	b0 c0       	rjmp	.+352    	; 0xb28 <__mulsf3+0x1e8>
     9c8:	6d 84       	ldd	r6, Y+13	; 0x0d
     9ca:	7e 84       	ldd	r7, Y+14	; 0x0e
     9cc:	8f 84       	ldd	r8, Y+15	; 0x0f
     9ce:	98 88       	ldd	r9, Y+16	; 0x10
     9d0:	ed 88       	ldd	r14, Y+21	; 0x15
     9d2:	fe 88       	ldd	r15, Y+22	; 0x16
     9d4:	0f 89       	ldd	r16, Y+23	; 0x17
     9d6:	18 8d       	ldd	r17, Y+24	; 0x18
     9d8:	e0 e2       	ldi	r30, 0x20	; 32
     9da:	f0 e0       	ldi	r31, 0x00	; 0
     9dc:	80 e0       	ldi	r24, 0x00	; 0
     9de:	90 e0       	ldi	r25, 0x00	; 0
     9e0:	dc 01       	movw	r26, r24
     9e2:	aa 24       	eor	r10, r10
     9e4:	bb 24       	eor	r11, r11
     9e6:	65 01       	movw	r12, r10
     9e8:	20 e0       	ldi	r18, 0x00	; 0
     9ea:	30 e0       	ldi	r19, 0x00	; 0
     9ec:	a9 01       	movw	r20, r18
     9ee:	b3 01       	movw	r22, r6
     9f0:	61 70       	andi	r22, 0x01	; 1
     9f2:	70 70       	andi	r23, 0x00	; 0
     9f4:	61 15       	cp	r22, r1
     9f6:	71 05       	cpc	r23, r1
     9f8:	d1 f0       	breq	.+52     	; 0xa2e <__mulsf3+0xee>
     9fa:	2e 0d       	add	r18, r14
     9fc:	3f 1d       	adc	r19, r15
     9fe:	40 1f       	adc	r20, r16
     a00:	51 1f       	adc	r21, r17
     a02:	15 01       	movw	r2, r10
     a04:	26 01       	movw	r4, r12
     a06:	28 0e       	add	r2, r24
     a08:	39 1e       	adc	r3, r25
     a0a:	4a 1e       	adc	r4, r26
     a0c:	5b 1e       	adc	r5, r27
     a0e:	81 e0       	ldi	r24, 0x01	; 1
     a10:	90 e0       	ldi	r25, 0x00	; 0
     a12:	a0 e0       	ldi	r26, 0x00	; 0
     a14:	b0 e0       	ldi	r27, 0x00	; 0
     a16:	2e 15       	cp	r18, r14
     a18:	3f 05       	cpc	r19, r15
     a1a:	40 07       	cpc	r20, r16
     a1c:	51 07       	cpc	r21, r17
     a1e:	18 f0       	brcs	.+6      	; 0xa26 <__mulsf3+0xe6>
     a20:	80 e0       	ldi	r24, 0x00	; 0
     a22:	90 e0       	ldi	r25, 0x00	; 0
     a24:	dc 01       	movw	r26, r24
     a26:	82 0d       	add	r24, r2
     a28:	93 1d       	adc	r25, r3
     a2a:	a4 1d       	adc	r26, r4
     a2c:	b5 1d       	adc	r27, r5
     a2e:	aa 0c       	add	r10, r10
     a30:	bb 1c       	adc	r11, r11
     a32:	cc 1c       	adc	r12, r12
     a34:	dd 1c       	adc	r13, r13
     a36:	17 ff       	sbrs	r17, 7
     a38:	09 c0       	rjmp	.+18     	; 0xa4c <__mulsf3+0x10c>
     a3a:	61 e0       	ldi	r22, 0x01	; 1
     a3c:	26 2e       	mov	r2, r22
     a3e:	31 2c       	mov	r3, r1
     a40:	41 2c       	mov	r4, r1
     a42:	51 2c       	mov	r5, r1
     a44:	a2 28       	or	r10, r2
     a46:	b3 28       	or	r11, r3
     a48:	c4 28       	or	r12, r4
     a4a:	d5 28       	or	r13, r5
     a4c:	31 97       	sbiw	r30, 0x01	; 1
     a4e:	49 f0       	breq	.+18     	; 0xa62 <__mulsf3+0x122>
     a50:	ee 0c       	add	r14, r14
     a52:	ff 1c       	adc	r15, r15
     a54:	00 1f       	adc	r16, r16
     a56:	11 1f       	adc	r17, r17
     a58:	96 94       	lsr	r9
     a5a:	87 94       	ror	r8
     a5c:	77 94       	ror	r7
     a5e:	67 94       	ror	r6
     a60:	c6 cf       	rjmp	.-116    	; 0x9ee <__mulsf3+0xae>
     a62:	6b 89       	ldd	r22, Y+19	; 0x13
     a64:	7c 89       	ldd	r23, Y+20	; 0x14
     a66:	eb 85       	ldd	r30, Y+11	; 0x0b
     a68:	fc 85       	ldd	r31, Y+12	; 0x0c
     a6a:	6e 0f       	add	r22, r30
     a6c:	7f 1f       	adc	r23, r31
     a6e:	6e 5f       	subi	r22, 0xFE	; 254
     a70:	7f 4f       	sbci	r23, 0xFF	; 255
     a72:	7c 8f       	std	Y+28, r23	; 0x1c
     a74:	6b 8f       	std	Y+27, r22	; 0x1b
     a76:	61 e0       	ldi	r22, 0x01	; 1
     a78:	ea 85       	ldd	r30, Y+10	; 0x0a
     a7a:	7a 89       	ldd	r23, Y+18	; 0x12
     a7c:	e7 17       	cp	r30, r23
     a7e:	09 f4       	brne	.+2      	; 0xa82 <__mulsf3+0x142>
     a80:	60 e0       	ldi	r22, 0x00	; 0
     a82:	6a 8f       	std	Y+26, r22	; 0x1a
     a84:	6b 8d       	ldd	r22, Y+27	; 0x1b
     a86:	7c 8d       	ldd	r23, Y+28	; 0x1c
     a88:	10 c0       	rjmp	.+32     	; 0xaaa <__mulsf3+0x16a>
     a8a:	fc 01       	movw	r30, r24
     a8c:	e1 70       	andi	r30, 0x01	; 1
     a8e:	f0 70       	andi	r31, 0x00	; 0
     a90:	30 97       	sbiw	r30, 0x00	; 0
     a92:	29 f0       	breq	.+10     	; 0xa9e <__mulsf3+0x15e>
     a94:	56 95       	lsr	r21
     a96:	47 95       	ror	r20
     a98:	37 95       	ror	r19
     a9a:	27 95       	ror	r18
     a9c:	50 68       	ori	r21, 0x80	; 128
     a9e:	b6 95       	lsr	r27
     aa0:	a7 95       	ror	r26
     aa2:	97 95       	ror	r25
     aa4:	87 95       	ror	r24
     aa6:	6f 5f       	subi	r22, 0xFF	; 255
     aa8:	7f 4f       	sbci	r23, 0xFF	; 255
     aaa:	b7 fd       	sbrc	r27, 7
     aac:	ee cf       	rjmp	.-36     	; 0xa8a <__mulsf3+0x14a>
     aae:	0c c0       	rjmp	.+24     	; 0xac8 <__mulsf3+0x188>
     ab0:	88 0f       	add	r24, r24
     ab2:	99 1f       	adc	r25, r25
     ab4:	aa 1f       	adc	r26, r26
     ab6:	bb 1f       	adc	r27, r27
     ab8:	57 fd       	sbrc	r21, 7
     aba:	81 60       	ori	r24, 0x01	; 1
     abc:	22 0f       	add	r18, r18
     abe:	33 1f       	adc	r19, r19
     ac0:	44 1f       	adc	r20, r20
     ac2:	55 1f       	adc	r21, r21
     ac4:	61 50       	subi	r22, 0x01	; 1
     ac6:	70 40       	sbci	r23, 0x00	; 0
     ac8:	80 30       	cpi	r24, 0x00	; 0
     aca:	e0 e0       	ldi	r30, 0x00	; 0
     acc:	9e 07       	cpc	r25, r30
     ace:	e0 e0       	ldi	r30, 0x00	; 0
     ad0:	ae 07       	cpc	r26, r30
     ad2:	e0 e4       	ldi	r30, 0x40	; 64
     ad4:	be 07       	cpc	r27, r30
     ad6:	60 f3       	brcs	.-40     	; 0xab0 <__mulsf3+0x170>
     ad8:	6b 8f       	std	Y+27, r22	; 0x1b
     ada:	7c 8f       	std	Y+28, r23	; 0x1c
     adc:	6f e7       	ldi	r22, 0x7F	; 127
     ade:	e6 2e       	mov	r14, r22
     ae0:	f1 2c       	mov	r15, r1
     ae2:	01 2d       	mov	r16, r1
     ae4:	11 2d       	mov	r17, r1
     ae6:	e8 22       	and	r14, r24
     ae8:	f9 22       	and	r15, r25
     aea:	0a 23       	and	r16, r26
     aec:	1b 23       	and	r17, r27
     aee:	60 e4       	ldi	r22, 0x40	; 64
     af0:	e6 16       	cp	r14, r22
     af2:	f1 04       	cpc	r15, r1
     af4:	01 05       	cpc	r16, r1
     af6:	11 05       	cpc	r17, r1
     af8:	61 f4       	brne	.+24     	; 0xb12 <__mulsf3+0x1d2>
     afa:	87 fd       	sbrc	r24, 7
     afc:	0a c0       	rjmp	.+20     	; 0xb12 <__mulsf3+0x1d2>
     afe:	21 15       	cp	r18, r1
     b00:	31 05       	cpc	r19, r1
     b02:	41 05       	cpc	r20, r1
     b04:	51 05       	cpc	r21, r1
     b06:	29 f0       	breq	.+10     	; 0xb12 <__mulsf3+0x1d2>
     b08:	80 5c       	subi	r24, 0xC0	; 192
     b0a:	9f 4f       	sbci	r25, 0xFF	; 255
     b0c:	af 4f       	sbci	r26, 0xFF	; 255
     b0e:	bf 4f       	sbci	r27, 0xFF	; 255
     b10:	80 78       	andi	r24, 0x80	; 128
     b12:	8d 8f       	std	Y+29, r24	; 0x1d
     b14:	9e 8f       	std	Y+30, r25	; 0x1e
     b16:	af 8f       	std	Y+31, r26	; 0x1f
     b18:	b8 a3       	std	Y+32, r27	; 0x20
     b1a:	83 e0       	ldi	r24, 0x03	; 3
     b1c:	89 8f       	std	Y+25, r24	; 0x19
     b1e:	ce 01       	movw	r24, r28
     b20:	49 96       	adiw	r24, 0x19	; 25
     b22:	02 c0       	rjmp	.+4      	; 0xb28 <__mulsf3+0x1e8>
     b24:	80 e6       	ldi	r24, 0x60	; 96
     b26:	90 e0       	ldi	r25, 0x00	; 0
     b28:	0e 94 2a 07 	call	0xe54	; 0xe54 <__pack_f>
     b2c:	a0 96       	adiw	r28, 0x20	; 32
     b2e:	e2 e1       	ldi	r30, 0x12	; 18
     b30:	0c 94 d6 08 	jmp	0x11ac	; 0x11ac <__epilogue_restores__>

00000b34 <__divsf3>:
     b34:	a8 e1       	ldi	r26, 0x18	; 24
     b36:	b0 e0       	ldi	r27, 0x00	; 0
     b38:	e0 ea       	ldi	r30, 0xA0	; 160
     b3a:	f5 e0       	ldi	r31, 0x05	; 5
     b3c:	0c 94 c2 08 	jmp	0x1184	; 0x1184 <__prologue_saves__+0x10>
     b40:	69 83       	std	Y+1, r22	; 0x01
     b42:	7a 83       	std	Y+2, r23	; 0x02
     b44:	8b 83       	std	Y+3, r24	; 0x03
     b46:	9c 83       	std	Y+4, r25	; 0x04
     b48:	2d 83       	std	Y+5, r18	; 0x05
     b4a:	3e 83       	std	Y+6, r19	; 0x06
     b4c:	4f 83       	std	Y+7, r20	; 0x07
     b4e:	58 87       	std	Y+8, r21	; 0x08
     b50:	8e 01       	movw	r16, r28
     b52:	07 5f       	subi	r16, 0xF7	; 247
     b54:	1f 4f       	sbci	r17, 0xFF	; 255
     b56:	ce 01       	movw	r24, r28
     b58:	01 96       	adiw	r24, 0x01	; 1
     b5a:	b8 01       	movw	r22, r16
     b5c:	0e 94 f8 07 	call	0xff0	; 0xff0 <__unpack_f>
     b60:	81 e1       	ldi	r24, 0x11	; 17
     b62:	e8 2e       	mov	r14, r24
     b64:	f1 2c       	mov	r15, r1
     b66:	ec 0e       	add	r14, r28
     b68:	fd 1e       	adc	r15, r29
     b6a:	ce 01       	movw	r24, r28
     b6c:	05 96       	adiw	r24, 0x05	; 5
     b6e:	b7 01       	movw	r22, r14
     b70:	0e 94 f8 07 	call	0xff0	; 0xff0 <__unpack_f>
     b74:	99 85       	ldd	r25, Y+9	; 0x09
     b76:	92 30       	cpi	r25, 0x02	; 2
     b78:	08 f4       	brcc	.+2      	; 0xb7c <__divsf3+0x48>
     b7a:	83 c0       	rjmp	.+262    	; 0xc82 <__divsf3+0x14e>
     b7c:	89 89       	ldd	r24, Y+17	; 0x11
     b7e:	82 30       	cpi	r24, 0x02	; 2
     b80:	08 f4       	brcc	.+2      	; 0xb84 <__divsf3+0x50>
     b82:	7b c0       	rjmp	.+246    	; 0xc7a <__divsf3+0x146>
     b84:	2a 85       	ldd	r18, Y+10	; 0x0a
     b86:	3a 89       	ldd	r19, Y+18	; 0x12
     b88:	23 27       	eor	r18, r19
     b8a:	2a 87       	std	Y+10, r18	; 0x0a
     b8c:	94 30       	cpi	r25, 0x04	; 4
     b8e:	11 f0       	breq	.+4      	; 0xb94 <__divsf3+0x60>
     b90:	92 30       	cpi	r25, 0x02	; 2
     b92:	21 f4       	brne	.+8      	; 0xb9c <__divsf3+0x68>
     b94:	98 17       	cp	r25, r24
     b96:	09 f0       	breq	.+2      	; 0xb9a <__divsf3+0x66>
     b98:	6c c0       	rjmp	.+216    	; 0xc72 <__divsf3+0x13e>
     b9a:	71 c0       	rjmp	.+226    	; 0xc7e <__divsf3+0x14a>
     b9c:	84 30       	cpi	r24, 0x04	; 4
     b9e:	39 f4       	brne	.+14     	; 0xbae <__divsf3+0x7a>
     ba0:	1d 86       	std	Y+13, r1	; 0x0d
     ba2:	1e 86       	std	Y+14, r1	; 0x0e
     ba4:	1f 86       	std	Y+15, r1	; 0x0f
     ba6:	18 8a       	std	Y+16, r1	; 0x10
     ba8:	1c 86       	std	Y+12, r1	; 0x0c
     baa:	1b 86       	std	Y+11, r1	; 0x0b
     bac:	6a c0       	rjmp	.+212    	; 0xc82 <__divsf3+0x14e>
     bae:	82 30       	cpi	r24, 0x02	; 2
     bb0:	19 f4       	brne	.+6      	; 0xbb8 <__divsf3+0x84>
     bb2:	84 e0       	ldi	r24, 0x04	; 4
     bb4:	89 87       	std	Y+9, r24	; 0x09
     bb6:	65 c0       	rjmp	.+202    	; 0xc82 <__divsf3+0x14e>
     bb8:	8b 85       	ldd	r24, Y+11	; 0x0b
     bba:	9c 85       	ldd	r25, Y+12	; 0x0c
     bbc:	2b 89       	ldd	r18, Y+19	; 0x13
     bbe:	3c 89       	ldd	r19, Y+20	; 0x14
     bc0:	82 1b       	sub	r24, r18
     bc2:	93 0b       	sbc	r25, r19
     bc4:	9c 87       	std	Y+12, r25	; 0x0c
     bc6:	8b 87       	std	Y+11, r24	; 0x0b
     bc8:	2d 85       	ldd	r18, Y+13	; 0x0d
     bca:	3e 85       	ldd	r19, Y+14	; 0x0e
     bcc:	4f 85       	ldd	r20, Y+15	; 0x0f
     bce:	58 89       	ldd	r21, Y+16	; 0x10
     bd0:	ed 88       	ldd	r14, Y+21	; 0x15
     bd2:	fe 88       	ldd	r15, Y+22	; 0x16
     bd4:	0f 89       	ldd	r16, Y+23	; 0x17
     bd6:	18 8d       	ldd	r17, Y+24	; 0x18
     bd8:	2e 15       	cp	r18, r14
     bda:	3f 05       	cpc	r19, r15
     bdc:	40 07       	cpc	r20, r16
     bde:	51 07       	cpc	r21, r17
     be0:	38 f4       	brcc	.+14     	; 0xbf0 <__divsf3+0xbc>
     be2:	22 0f       	add	r18, r18
     be4:	33 1f       	adc	r19, r19
     be6:	44 1f       	adc	r20, r20
     be8:	55 1f       	adc	r21, r21
     bea:	01 97       	sbiw	r24, 0x01	; 1
     bec:	9c 87       	std	Y+12, r25	; 0x0c
     bee:	8b 87       	std	Y+11, r24	; 0x0b
     bf0:	6f e1       	ldi	r22, 0x1F	; 31
     bf2:	70 e0       	ldi	r23, 0x00	; 0
     bf4:	a1 2c       	mov	r10, r1
     bf6:	b1 2c       	mov	r11, r1
     bf8:	c1 2c       	mov	r12, r1
     bfa:	a0 e4       	ldi	r26, 0x40	; 64
     bfc:	da 2e       	mov	r13, r26
     bfe:	80 e0       	ldi	r24, 0x00	; 0
     c00:	90 e0       	ldi	r25, 0x00	; 0
     c02:	dc 01       	movw	r26, r24
     c04:	2e 15       	cp	r18, r14
     c06:	3f 05       	cpc	r19, r15
     c08:	40 07       	cpc	r20, r16
     c0a:	51 07       	cpc	r21, r17
     c0c:	40 f0       	brcs	.+16     	; 0xc1e <__divsf3+0xea>
     c0e:	8a 29       	or	r24, r10
     c10:	9b 29       	or	r25, r11
     c12:	ac 29       	or	r26, r12
     c14:	bd 29       	or	r27, r13
     c16:	2e 19       	sub	r18, r14
     c18:	3f 09       	sbc	r19, r15
     c1a:	40 0b       	sbc	r20, r16
     c1c:	51 0b       	sbc	r21, r17
     c1e:	d6 94       	lsr	r13
     c20:	c7 94       	ror	r12
     c22:	b7 94       	ror	r11
     c24:	a7 94       	ror	r10
     c26:	22 0f       	add	r18, r18
     c28:	33 1f       	adc	r19, r19
     c2a:	44 1f       	adc	r20, r20
     c2c:	55 1f       	adc	r21, r21
     c2e:	61 50       	subi	r22, 0x01	; 1
     c30:	70 40       	sbci	r23, 0x00	; 0
     c32:	41 f7       	brne	.-48     	; 0xc04 <__divsf3+0xd0>
     c34:	6f e7       	ldi	r22, 0x7F	; 127
     c36:	e6 2e       	mov	r14, r22
     c38:	f1 2c       	mov	r15, r1
     c3a:	01 2d       	mov	r16, r1
     c3c:	11 2d       	mov	r17, r1
     c3e:	e8 22       	and	r14, r24
     c40:	f9 22       	and	r15, r25
     c42:	0a 23       	and	r16, r26
     c44:	1b 23       	and	r17, r27
     c46:	60 e4       	ldi	r22, 0x40	; 64
     c48:	e6 16       	cp	r14, r22
     c4a:	f1 04       	cpc	r15, r1
     c4c:	01 05       	cpc	r16, r1
     c4e:	11 05       	cpc	r17, r1
     c50:	61 f4       	brne	.+24     	; 0xc6a <__divsf3+0x136>
     c52:	87 fd       	sbrc	r24, 7
     c54:	0a c0       	rjmp	.+20     	; 0xc6a <__divsf3+0x136>
     c56:	21 15       	cp	r18, r1
     c58:	31 05       	cpc	r19, r1
     c5a:	41 05       	cpc	r20, r1
     c5c:	51 05       	cpc	r21, r1
     c5e:	29 f0       	breq	.+10     	; 0xc6a <__divsf3+0x136>
     c60:	80 5c       	subi	r24, 0xC0	; 192
     c62:	9f 4f       	sbci	r25, 0xFF	; 255
     c64:	af 4f       	sbci	r26, 0xFF	; 255
     c66:	bf 4f       	sbci	r27, 0xFF	; 255
     c68:	80 78       	andi	r24, 0x80	; 128
     c6a:	8d 87       	std	Y+13, r24	; 0x0d
     c6c:	9e 87       	std	Y+14, r25	; 0x0e
     c6e:	af 87       	std	Y+15, r26	; 0x0f
     c70:	b8 8b       	std	Y+16, r27	; 0x10
     c72:	8e 01       	movw	r16, r28
     c74:	07 5f       	subi	r16, 0xF7	; 247
     c76:	1f 4f       	sbci	r17, 0xFF	; 255
     c78:	04 c0       	rjmp	.+8      	; 0xc82 <__divsf3+0x14e>
     c7a:	87 01       	movw	r16, r14
     c7c:	02 c0       	rjmp	.+4      	; 0xc82 <__divsf3+0x14e>
     c7e:	00 e6       	ldi	r16, 0x60	; 96
     c80:	10 e0       	ldi	r17, 0x00	; 0
     c82:	c8 01       	movw	r24, r16
     c84:	0e 94 2a 07 	call	0xe54	; 0xe54 <__pack_f>
     c88:	68 96       	adiw	r28, 0x18	; 24
     c8a:	ea e0       	ldi	r30, 0x0A	; 10
     c8c:	0c 94 de 08 	jmp	0x11bc	; 0x11bc <__epilogue_restores__+0x10>

00000c90 <__gtsf2>:
     c90:	a8 e1       	ldi	r26, 0x18	; 24
     c92:	b0 e0       	ldi	r27, 0x00	; 0
     c94:	ee e4       	ldi	r30, 0x4E	; 78
     c96:	f6 e0       	ldi	r31, 0x06	; 6
     c98:	0c 94 c6 08 	jmp	0x118c	; 0x118c <__prologue_saves__+0x18>
     c9c:	69 83       	std	Y+1, r22	; 0x01
     c9e:	7a 83       	std	Y+2, r23	; 0x02
     ca0:	8b 83       	std	Y+3, r24	; 0x03
     ca2:	9c 83       	std	Y+4, r25	; 0x04
     ca4:	2d 83       	std	Y+5, r18	; 0x05
     ca6:	3e 83       	std	Y+6, r19	; 0x06
     ca8:	4f 83       	std	Y+7, r20	; 0x07
     caa:	58 87       	std	Y+8, r21	; 0x08
     cac:	8e 01       	movw	r16, r28
     cae:	07 5f       	subi	r16, 0xF7	; 247
     cb0:	1f 4f       	sbci	r17, 0xFF	; 255
     cb2:	ce 01       	movw	r24, r28
     cb4:	01 96       	adiw	r24, 0x01	; 1
     cb6:	b8 01       	movw	r22, r16
     cb8:	0e 94 f8 07 	call	0xff0	; 0xff0 <__unpack_f>
     cbc:	81 e1       	ldi	r24, 0x11	; 17
     cbe:	e8 2e       	mov	r14, r24
     cc0:	f1 2c       	mov	r15, r1
     cc2:	ec 0e       	add	r14, r28
     cc4:	fd 1e       	adc	r15, r29
     cc6:	ce 01       	movw	r24, r28
     cc8:	05 96       	adiw	r24, 0x05	; 5
     cca:	b7 01       	movw	r22, r14
     ccc:	0e 94 f8 07 	call	0xff0	; 0xff0 <__unpack_f>
     cd0:	89 85       	ldd	r24, Y+9	; 0x09
     cd2:	82 30       	cpi	r24, 0x02	; 2
     cd4:	40 f0       	brcs	.+16     	; 0xce6 <__gtsf2+0x56>
     cd6:	89 89       	ldd	r24, Y+17	; 0x11
     cd8:	82 30       	cpi	r24, 0x02	; 2
     cda:	28 f0       	brcs	.+10     	; 0xce6 <__gtsf2+0x56>
     cdc:	c8 01       	movw	r24, r16
     cde:	b7 01       	movw	r22, r14
     ce0:	0e 94 61 08 	call	0x10c2	; 0x10c2 <__fpcmp_parts_f>
     ce4:	01 c0       	rjmp	.+2      	; 0xce8 <__gtsf2+0x58>
     ce6:	8f ef       	ldi	r24, 0xFF	; 255
     ce8:	68 96       	adiw	r28, 0x18	; 24
     cea:	e6 e0       	ldi	r30, 0x06	; 6
     cec:	0c 94 e2 08 	jmp	0x11c4	; 0x11c4 <__epilogue_restores__+0x18>

00000cf0 <__gesf2>:
     cf0:	a8 e1       	ldi	r26, 0x18	; 24
     cf2:	b0 e0       	ldi	r27, 0x00	; 0
     cf4:	ee e7       	ldi	r30, 0x7E	; 126
     cf6:	f6 e0       	ldi	r31, 0x06	; 6
     cf8:	0c 94 c6 08 	jmp	0x118c	; 0x118c <__prologue_saves__+0x18>
     cfc:	69 83       	std	Y+1, r22	; 0x01
     cfe:	7a 83       	std	Y+2, r23	; 0x02
     d00:	8b 83       	std	Y+3, r24	; 0x03
     d02:	9c 83       	std	Y+4, r25	; 0x04
     d04:	2d 83       	std	Y+5, r18	; 0x05
     d06:	3e 83       	std	Y+6, r19	; 0x06
     d08:	4f 83       	std	Y+7, r20	; 0x07
     d0a:	58 87       	std	Y+8, r21	; 0x08
     d0c:	8e 01       	movw	r16, r28
     d0e:	07 5f       	subi	r16, 0xF7	; 247
     d10:	1f 4f       	sbci	r17, 0xFF	; 255
     d12:	ce 01       	movw	r24, r28
     d14:	01 96       	adiw	r24, 0x01	; 1
     d16:	b8 01       	movw	r22, r16
     d18:	0e 94 f8 07 	call	0xff0	; 0xff0 <__unpack_f>
     d1c:	81 e1       	ldi	r24, 0x11	; 17
     d1e:	e8 2e       	mov	r14, r24
     d20:	f1 2c       	mov	r15, r1
     d22:	ec 0e       	add	r14, r28
     d24:	fd 1e       	adc	r15, r29
     d26:	ce 01       	movw	r24, r28
     d28:	05 96       	adiw	r24, 0x05	; 5
     d2a:	b7 01       	movw	r22, r14
     d2c:	0e 94 f8 07 	call	0xff0	; 0xff0 <__unpack_f>
     d30:	89 85       	ldd	r24, Y+9	; 0x09
     d32:	82 30       	cpi	r24, 0x02	; 2
     d34:	40 f0       	brcs	.+16     	; 0xd46 <__gesf2+0x56>
     d36:	89 89       	ldd	r24, Y+17	; 0x11
     d38:	82 30       	cpi	r24, 0x02	; 2
     d3a:	28 f0       	brcs	.+10     	; 0xd46 <__gesf2+0x56>
     d3c:	c8 01       	movw	r24, r16
     d3e:	b7 01       	movw	r22, r14
     d40:	0e 94 61 08 	call	0x10c2	; 0x10c2 <__fpcmp_parts_f>
     d44:	01 c0       	rjmp	.+2      	; 0xd48 <__gesf2+0x58>
     d46:	8f ef       	ldi	r24, 0xFF	; 255
     d48:	68 96       	adiw	r28, 0x18	; 24
     d4a:	e6 e0       	ldi	r30, 0x06	; 6
     d4c:	0c 94 e2 08 	jmp	0x11c4	; 0x11c4 <__epilogue_restores__+0x18>

00000d50 <__ltsf2>:
     d50:	a8 e1       	ldi	r26, 0x18	; 24
     d52:	b0 e0       	ldi	r27, 0x00	; 0
     d54:	ee ea       	ldi	r30, 0xAE	; 174
     d56:	f6 e0       	ldi	r31, 0x06	; 6
     d58:	0c 94 c6 08 	jmp	0x118c	; 0x118c <__prologue_saves__+0x18>
     d5c:	69 83       	std	Y+1, r22	; 0x01
     d5e:	7a 83       	std	Y+2, r23	; 0x02
     d60:	8b 83       	std	Y+3, r24	; 0x03
     d62:	9c 83       	std	Y+4, r25	; 0x04
     d64:	2d 83       	std	Y+5, r18	; 0x05
     d66:	3e 83       	std	Y+6, r19	; 0x06
     d68:	4f 83       	std	Y+7, r20	; 0x07
     d6a:	58 87       	std	Y+8, r21	; 0x08
     d6c:	8e 01       	movw	r16, r28
     d6e:	07 5f       	subi	r16, 0xF7	; 247
     d70:	1f 4f       	sbci	r17, 0xFF	; 255
     d72:	ce 01       	movw	r24, r28
     d74:	01 96       	adiw	r24, 0x01	; 1
     d76:	b8 01       	movw	r22, r16
     d78:	0e 94 f8 07 	call	0xff0	; 0xff0 <__unpack_f>
     d7c:	81 e1       	ldi	r24, 0x11	; 17
     d7e:	e8 2e       	mov	r14, r24
     d80:	f1 2c       	mov	r15, r1
     d82:	ec 0e       	add	r14, r28
     d84:	fd 1e       	adc	r15, r29
     d86:	ce 01       	movw	r24, r28
     d88:	05 96       	adiw	r24, 0x05	; 5
     d8a:	b7 01       	movw	r22, r14
     d8c:	0e 94 f8 07 	call	0xff0	; 0xff0 <__unpack_f>
     d90:	89 85       	ldd	r24, Y+9	; 0x09
     d92:	82 30       	cpi	r24, 0x02	; 2
     d94:	40 f0       	brcs	.+16     	; 0xda6 <__ltsf2+0x56>
     d96:	89 89       	ldd	r24, Y+17	; 0x11
     d98:	82 30       	cpi	r24, 0x02	; 2
     d9a:	28 f0       	brcs	.+10     	; 0xda6 <__ltsf2+0x56>
     d9c:	c8 01       	movw	r24, r16
     d9e:	b7 01       	movw	r22, r14
     da0:	0e 94 61 08 	call	0x10c2	; 0x10c2 <__fpcmp_parts_f>
     da4:	01 c0       	rjmp	.+2      	; 0xda8 <__ltsf2+0x58>
     da6:	81 e0       	ldi	r24, 0x01	; 1
     da8:	68 96       	adiw	r28, 0x18	; 24
     daa:	e6 e0       	ldi	r30, 0x06	; 6
     dac:	0c 94 e2 08 	jmp	0x11c4	; 0x11c4 <__epilogue_restores__+0x18>

00000db0 <__fixsfsi>:
     db0:	ac e0       	ldi	r26, 0x0C	; 12
     db2:	b0 e0       	ldi	r27, 0x00	; 0
     db4:	ee ed       	ldi	r30, 0xDE	; 222
     db6:	f6 e0       	ldi	r31, 0x06	; 6
     db8:	0c 94 ca 08 	jmp	0x1194	; 0x1194 <__prologue_saves__+0x20>
     dbc:	69 83       	std	Y+1, r22	; 0x01
     dbe:	7a 83       	std	Y+2, r23	; 0x02
     dc0:	8b 83       	std	Y+3, r24	; 0x03
     dc2:	9c 83       	std	Y+4, r25	; 0x04
     dc4:	ce 01       	movw	r24, r28
     dc6:	01 96       	adiw	r24, 0x01	; 1
     dc8:	be 01       	movw	r22, r28
     dca:	6b 5f       	subi	r22, 0xFB	; 251
     dcc:	7f 4f       	sbci	r23, 0xFF	; 255
     dce:	0e 94 f8 07 	call	0xff0	; 0xff0 <__unpack_f>
     dd2:	8d 81       	ldd	r24, Y+5	; 0x05
     dd4:	82 30       	cpi	r24, 0x02	; 2
     dd6:	81 f1       	breq	.+96     	; 0xe38 <__fixsfsi+0x88>
     dd8:	82 30       	cpi	r24, 0x02	; 2
     dda:	70 f1       	brcs	.+92     	; 0xe38 <__fixsfsi+0x88>
     ddc:	84 30       	cpi	r24, 0x04	; 4
     dde:	21 f4       	brne	.+8      	; 0xde8 <__fixsfsi+0x38>
     de0:	8e 81       	ldd	r24, Y+6	; 0x06
     de2:	88 23       	and	r24, r24
     de4:	69 f1       	breq	.+90     	; 0xe40 <__fixsfsi+0x90>
     de6:	0a c0       	rjmp	.+20     	; 0xdfc <__fixsfsi+0x4c>
     de8:	2f 81       	ldd	r18, Y+7	; 0x07
     dea:	38 85       	ldd	r19, Y+8	; 0x08
     dec:	37 fd       	sbrc	r19, 7
     dee:	24 c0       	rjmp	.+72     	; 0xe38 <__fixsfsi+0x88>
     df0:	6e 81       	ldd	r22, Y+6	; 0x06
     df2:	2f 31       	cpi	r18, 0x1F	; 31
     df4:	31 05       	cpc	r19, r1
     df6:	3c f0       	brlt	.+14     	; 0xe06 <__fixsfsi+0x56>
     df8:	66 23       	and	r22, r22
     dfa:	11 f1       	breq	.+68     	; 0xe40 <__fixsfsi+0x90>
     dfc:	20 e0       	ldi	r18, 0x00	; 0
     dfe:	30 e0       	ldi	r19, 0x00	; 0
     e00:	40 e0       	ldi	r20, 0x00	; 0
     e02:	50 e8       	ldi	r21, 0x80	; 128
     e04:	21 c0       	rjmp	.+66     	; 0xe48 <__fixsfsi+0x98>
     e06:	8e e1       	ldi	r24, 0x1E	; 30
     e08:	90 e0       	ldi	r25, 0x00	; 0
     e0a:	82 1b       	sub	r24, r18
     e0c:	93 0b       	sbc	r25, r19
     e0e:	29 85       	ldd	r18, Y+9	; 0x09
     e10:	3a 85       	ldd	r19, Y+10	; 0x0a
     e12:	4b 85       	ldd	r20, Y+11	; 0x0b
     e14:	5c 85       	ldd	r21, Y+12	; 0x0c
     e16:	04 c0       	rjmp	.+8      	; 0xe20 <__fixsfsi+0x70>
     e18:	56 95       	lsr	r21
     e1a:	47 95       	ror	r20
     e1c:	37 95       	ror	r19
     e1e:	27 95       	ror	r18
     e20:	8a 95       	dec	r24
     e22:	d2 f7       	brpl	.-12     	; 0xe18 <__fixsfsi+0x68>
     e24:	66 23       	and	r22, r22
     e26:	81 f0       	breq	.+32     	; 0xe48 <__fixsfsi+0x98>
     e28:	50 95       	com	r21
     e2a:	40 95       	com	r20
     e2c:	30 95       	com	r19
     e2e:	21 95       	neg	r18
     e30:	3f 4f       	sbci	r19, 0xFF	; 255
     e32:	4f 4f       	sbci	r20, 0xFF	; 255
     e34:	5f 4f       	sbci	r21, 0xFF	; 255
     e36:	08 c0       	rjmp	.+16     	; 0xe48 <__fixsfsi+0x98>
     e38:	20 e0       	ldi	r18, 0x00	; 0
     e3a:	30 e0       	ldi	r19, 0x00	; 0
     e3c:	a9 01       	movw	r20, r18
     e3e:	04 c0       	rjmp	.+8      	; 0xe48 <__fixsfsi+0x98>
     e40:	2f ef       	ldi	r18, 0xFF	; 255
     e42:	3f ef       	ldi	r19, 0xFF	; 255
     e44:	4f ef       	ldi	r20, 0xFF	; 255
     e46:	5f e7       	ldi	r21, 0x7F	; 127
     e48:	b9 01       	movw	r22, r18
     e4a:	ca 01       	movw	r24, r20
     e4c:	2c 96       	adiw	r28, 0x0c	; 12
     e4e:	e2 e0       	ldi	r30, 0x02	; 2
     e50:	0c 94 e6 08 	jmp	0x11cc	; 0x11cc <__epilogue_restores__+0x20>

00000e54 <__pack_f>:
     e54:	ef 92       	push	r14
     e56:	ff 92       	push	r15
     e58:	0f 93       	push	r16
     e5a:	1f 93       	push	r17
     e5c:	cf 93       	push	r28
     e5e:	df 93       	push	r29
     e60:	fc 01       	movw	r30, r24
     e62:	24 81       	ldd	r18, Z+4	; 0x04
     e64:	35 81       	ldd	r19, Z+5	; 0x05
     e66:	46 81       	ldd	r20, Z+6	; 0x06
     e68:	57 81       	ldd	r21, Z+7	; 0x07
     e6a:	61 81       	ldd	r22, Z+1	; 0x01
     e6c:	80 81       	ld	r24, Z
     e6e:	82 30       	cpi	r24, 0x02	; 2
     e70:	20 f4       	brcc	.+8      	; 0xe7a <__pack_f+0x26>
     e72:	40 61       	ori	r20, 0x10	; 16
     e74:	ef ef       	ldi	r30, 0xFF	; 255
     e76:	f0 e0       	ldi	r31, 0x00	; 0
     e78:	a3 c0       	rjmp	.+326    	; 0xfc0 <__pack_f+0x16c>
     e7a:	84 30       	cpi	r24, 0x04	; 4
     e7c:	09 f4       	brne	.+2      	; 0xe80 <__pack_f+0x2c>
     e7e:	9b c0       	rjmp	.+310    	; 0xfb6 <__pack_f+0x162>
     e80:	82 30       	cpi	r24, 0x02	; 2
     e82:	09 f4       	brne	.+2      	; 0xe86 <__pack_f+0x32>
     e84:	92 c0       	rjmp	.+292    	; 0xfaa <__pack_f+0x156>
     e86:	21 15       	cp	r18, r1
     e88:	31 05       	cpc	r19, r1
     e8a:	41 05       	cpc	r20, r1
     e8c:	51 05       	cpc	r21, r1
     e8e:	09 f4       	brne	.+2      	; 0xe92 <__pack_f+0x3e>
     e90:	8f c0       	rjmp	.+286    	; 0xfb0 <__pack_f+0x15c>
     e92:	02 80       	ldd	r0, Z+2	; 0x02
     e94:	f3 81       	ldd	r31, Z+3	; 0x03
     e96:	e0 2d       	mov	r30, r0
     e98:	8f ef       	ldi	r24, 0xFF	; 255
     e9a:	e2 38       	cpi	r30, 0x82	; 130
     e9c:	f8 07       	cpc	r31, r24
     e9e:	0c f0       	brlt	.+2      	; 0xea2 <__pack_f+0x4e>
     ea0:	5a c0       	rjmp	.+180    	; 0xf56 <__pack_f+0x102>
     ea2:	c2 e8       	ldi	r28, 0x82	; 130
     ea4:	df ef       	ldi	r29, 0xFF	; 255
     ea6:	ce 1b       	sub	r28, r30
     ea8:	df 0b       	sbc	r29, r31
     eaa:	ca 31       	cpi	r28, 0x1A	; 26
     eac:	d1 05       	cpc	r29, r1
     eae:	6c f5       	brge	.+90     	; 0xf0a <__pack_f+0xb6>
     eb0:	79 01       	movw	r14, r18
     eb2:	8a 01       	movw	r16, r20
     eb4:	0c 2e       	mov	r0, r28
     eb6:	04 c0       	rjmp	.+8      	; 0xec0 <__pack_f+0x6c>
     eb8:	16 95       	lsr	r17
     eba:	07 95       	ror	r16
     ebc:	f7 94       	ror	r15
     ebe:	e7 94       	ror	r14
     ec0:	0a 94       	dec	r0
     ec2:	d2 f7       	brpl	.-12     	; 0xeb8 <__pack_f+0x64>
     ec4:	81 e0       	ldi	r24, 0x01	; 1
     ec6:	90 e0       	ldi	r25, 0x00	; 0
     ec8:	a0 e0       	ldi	r26, 0x00	; 0
     eca:	b0 e0       	ldi	r27, 0x00	; 0
     ecc:	0c 2e       	mov	r0, r28
     ece:	04 c0       	rjmp	.+8      	; 0xed8 <__pack_f+0x84>
     ed0:	88 0f       	add	r24, r24
     ed2:	99 1f       	adc	r25, r25
     ed4:	aa 1f       	adc	r26, r26
     ed6:	bb 1f       	adc	r27, r27
     ed8:	0a 94       	dec	r0
     eda:	d2 f7       	brpl	.-12     	; 0xed0 <__pack_f+0x7c>
     edc:	01 97       	sbiw	r24, 0x01	; 1
     ede:	a1 09       	sbc	r26, r1
     ee0:	b1 09       	sbc	r27, r1
     ee2:	82 23       	and	r24, r18
     ee4:	93 23       	and	r25, r19
     ee6:	a4 23       	and	r26, r20
     ee8:	b5 23       	and	r27, r21
     eea:	21 e0       	ldi	r18, 0x01	; 1
     eec:	30 e0       	ldi	r19, 0x00	; 0
     eee:	40 e0       	ldi	r20, 0x00	; 0
     ef0:	50 e0       	ldi	r21, 0x00	; 0
     ef2:	00 97       	sbiw	r24, 0x00	; 0
     ef4:	a1 05       	cpc	r26, r1
     ef6:	b1 05       	cpc	r27, r1
     ef8:	19 f4       	brne	.+6      	; 0xf00 <__pack_f+0xac>
     efa:	20 e0       	ldi	r18, 0x00	; 0
     efc:	30 e0       	ldi	r19, 0x00	; 0
     efe:	a9 01       	movw	r20, r18
     f00:	2e 29       	or	r18, r14
     f02:	3f 29       	or	r19, r15
     f04:	40 2b       	or	r20, r16
     f06:	51 2b       	or	r21, r17
     f08:	03 c0       	rjmp	.+6      	; 0xf10 <__pack_f+0xbc>
     f0a:	20 e0       	ldi	r18, 0x00	; 0
     f0c:	30 e0       	ldi	r19, 0x00	; 0
     f0e:	a9 01       	movw	r20, r18
     f10:	da 01       	movw	r26, r20
     f12:	c9 01       	movw	r24, r18
     f14:	8f 77       	andi	r24, 0x7F	; 127
     f16:	90 70       	andi	r25, 0x00	; 0
     f18:	a0 70       	andi	r26, 0x00	; 0
     f1a:	b0 70       	andi	r27, 0x00	; 0
     f1c:	80 34       	cpi	r24, 0x40	; 64
     f1e:	91 05       	cpc	r25, r1
     f20:	a1 05       	cpc	r26, r1
     f22:	b1 05       	cpc	r27, r1
     f24:	39 f4       	brne	.+14     	; 0xf34 <__pack_f+0xe0>
     f26:	27 ff       	sbrs	r18, 7
     f28:	09 c0       	rjmp	.+18     	; 0xf3c <__pack_f+0xe8>
     f2a:	20 5c       	subi	r18, 0xC0	; 192
     f2c:	3f 4f       	sbci	r19, 0xFF	; 255
     f2e:	4f 4f       	sbci	r20, 0xFF	; 255
     f30:	5f 4f       	sbci	r21, 0xFF	; 255
     f32:	04 c0       	rjmp	.+8      	; 0xf3c <__pack_f+0xe8>
     f34:	21 5c       	subi	r18, 0xC1	; 193
     f36:	3f 4f       	sbci	r19, 0xFF	; 255
     f38:	4f 4f       	sbci	r20, 0xFF	; 255
     f3a:	5f 4f       	sbci	r21, 0xFF	; 255
     f3c:	e1 e0       	ldi	r30, 0x01	; 1
     f3e:	f0 e0       	ldi	r31, 0x00	; 0
     f40:	20 30       	cpi	r18, 0x00	; 0
     f42:	80 e0       	ldi	r24, 0x00	; 0
     f44:	38 07       	cpc	r19, r24
     f46:	80 e0       	ldi	r24, 0x00	; 0
     f48:	48 07       	cpc	r20, r24
     f4a:	80 e4       	ldi	r24, 0x40	; 64
     f4c:	58 07       	cpc	r21, r24
     f4e:	28 f5       	brcc	.+74     	; 0xf9a <__pack_f+0x146>
     f50:	e0 e0       	ldi	r30, 0x00	; 0
     f52:	f0 e0       	ldi	r31, 0x00	; 0
     f54:	22 c0       	rjmp	.+68     	; 0xf9a <__pack_f+0x146>
     f56:	e0 38       	cpi	r30, 0x80	; 128
     f58:	f1 05       	cpc	r31, r1
     f5a:	6c f5       	brge	.+90     	; 0xfb6 <__pack_f+0x162>
     f5c:	e1 58       	subi	r30, 0x81	; 129
     f5e:	ff 4f       	sbci	r31, 0xFF	; 255
     f60:	da 01       	movw	r26, r20
     f62:	c9 01       	movw	r24, r18
     f64:	8f 77       	andi	r24, 0x7F	; 127
     f66:	90 70       	andi	r25, 0x00	; 0
     f68:	a0 70       	andi	r26, 0x00	; 0
     f6a:	b0 70       	andi	r27, 0x00	; 0
     f6c:	80 34       	cpi	r24, 0x40	; 64
     f6e:	91 05       	cpc	r25, r1
     f70:	a1 05       	cpc	r26, r1
     f72:	b1 05       	cpc	r27, r1
     f74:	39 f4       	brne	.+14     	; 0xf84 <__pack_f+0x130>
     f76:	27 ff       	sbrs	r18, 7
     f78:	09 c0       	rjmp	.+18     	; 0xf8c <__pack_f+0x138>
     f7a:	20 5c       	subi	r18, 0xC0	; 192
     f7c:	3f 4f       	sbci	r19, 0xFF	; 255
     f7e:	4f 4f       	sbci	r20, 0xFF	; 255
     f80:	5f 4f       	sbci	r21, 0xFF	; 255
     f82:	04 c0       	rjmp	.+8      	; 0xf8c <__pack_f+0x138>
     f84:	21 5c       	subi	r18, 0xC1	; 193
     f86:	3f 4f       	sbci	r19, 0xFF	; 255
     f88:	4f 4f       	sbci	r20, 0xFF	; 255
     f8a:	5f 4f       	sbci	r21, 0xFF	; 255
     f8c:	57 ff       	sbrs	r21, 7
     f8e:	05 c0       	rjmp	.+10     	; 0xf9a <__pack_f+0x146>
     f90:	56 95       	lsr	r21
     f92:	47 95       	ror	r20
     f94:	37 95       	ror	r19
     f96:	27 95       	ror	r18
     f98:	31 96       	adiw	r30, 0x01	; 1
     f9a:	87 e0       	ldi	r24, 0x07	; 7
     f9c:	56 95       	lsr	r21
     f9e:	47 95       	ror	r20
     fa0:	37 95       	ror	r19
     fa2:	27 95       	ror	r18
     fa4:	8a 95       	dec	r24
     fa6:	d1 f7       	brne	.-12     	; 0xf9c <__pack_f+0x148>
     fa8:	0b c0       	rjmp	.+22     	; 0xfc0 <__pack_f+0x16c>
     faa:	e0 e0       	ldi	r30, 0x00	; 0
     fac:	f0 e0       	ldi	r31, 0x00	; 0
     fae:	05 c0       	rjmp	.+10     	; 0xfba <__pack_f+0x166>
     fb0:	e0 e0       	ldi	r30, 0x00	; 0
     fb2:	f0 e0       	ldi	r31, 0x00	; 0
     fb4:	05 c0       	rjmp	.+10     	; 0xfc0 <__pack_f+0x16c>
     fb6:	ef ef       	ldi	r30, 0xFF	; 255
     fb8:	f0 e0       	ldi	r31, 0x00	; 0
     fba:	20 e0       	ldi	r18, 0x00	; 0
     fbc:	30 e0       	ldi	r19, 0x00	; 0
     fbe:	a9 01       	movw	r20, r18
     fc0:	8e 2f       	mov	r24, r30
     fc2:	87 95       	ror	r24
     fc4:	88 27       	eor	r24, r24
     fc6:	87 95       	ror	r24
     fc8:	94 2f       	mov	r25, r20
     fca:	9f 77       	andi	r25, 0x7F	; 127
     fcc:	67 95       	ror	r22
     fce:	66 27       	eor	r22, r22
     fd0:	67 95       	ror	r22
     fd2:	e6 95       	lsr	r30
     fd4:	e2 2e       	mov	r14, r18
     fd6:	a9 2f       	mov	r26, r25
     fd8:	a8 2b       	or	r26, r24
     fda:	fe 2f       	mov	r31, r30
     fdc:	f6 2b       	or	r31, r22
     fde:	62 2f       	mov	r22, r18
     fe0:	73 2f       	mov	r23, r19
     fe2:	8a 2f       	mov	r24, r26
     fe4:	9f 2f       	mov	r25, r31
     fe6:	cd b7       	in	r28, 0x3d	; 61
     fe8:	de b7       	in	r29, 0x3e	; 62
     fea:	e6 e0       	ldi	r30, 0x06	; 6
     fec:	0c 94 e2 08 	jmp	0x11c4	; 0x11c4 <__epilogue_restores__+0x18>

00000ff0 <__unpack_f>:
     ff0:	dc 01       	movw	r26, r24
     ff2:	fb 01       	movw	r30, r22
     ff4:	2c 91       	ld	r18, X
     ff6:	11 96       	adiw	r26, 0x01	; 1
     ff8:	3c 91       	ld	r19, X
     ffa:	11 97       	sbiw	r26, 0x01	; 1
     ffc:	12 96       	adiw	r26, 0x02	; 2
     ffe:	8c 91       	ld	r24, X
    1000:	12 97       	sbiw	r26, 0x02	; 2
    1002:	48 2f       	mov	r20, r24
    1004:	4f 77       	andi	r20, 0x7F	; 127
    1006:	50 e0       	ldi	r21, 0x00	; 0
    1008:	98 2f       	mov	r25, r24
    100a:	99 1f       	adc	r25, r25
    100c:	99 27       	eor	r25, r25
    100e:	99 1f       	adc	r25, r25
    1010:	13 96       	adiw	r26, 0x03	; 3
    1012:	6c 91       	ld	r22, X
    1014:	13 97       	sbiw	r26, 0x03	; 3
    1016:	86 2f       	mov	r24, r22
    1018:	88 0f       	add	r24, r24
    101a:	89 2b       	or	r24, r25
    101c:	90 e0       	ldi	r25, 0x00	; 0
    101e:	66 1f       	adc	r22, r22
    1020:	66 27       	eor	r22, r22
    1022:	66 1f       	adc	r22, r22
    1024:	61 83       	std	Z+1, r22	; 0x01
    1026:	00 97       	sbiw	r24, 0x00	; 0
    1028:	39 f5       	brne	.+78     	; 0x1078 <__unpack_f+0x88>
    102a:	21 15       	cp	r18, r1
    102c:	31 05       	cpc	r19, r1
    102e:	41 05       	cpc	r20, r1
    1030:	51 05       	cpc	r21, r1
    1032:	11 f4       	brne	.+4      	; 0x1038 <__unpack_f+0x48>
    1034:	82 e0       	ldi	r24, 0x02	; 2
    1036:	29 c0       	rjmp	.+82     	; 0x108a <__unpack_f+0x9a>
    1038:	82 e8       	ldi	r24, 0x82	; 130
    103a:	9f ef       	ldi	r25, 0xFF	; 255
    103c:	93 83       	std	Z+3, r25	; 0x03
    103e:	82 83       	std	Z+2, r24	; 0x02
    1040:	67 e0       	ldi	r22, 0x07	; 7
    1042:	22 0f       	add	r18, r18
    1044:	33 1f       	adc	r19, r19
    1046:	44 1f       	adc	r20, r20
    1048:	55 1f       	adc	r21, r21
    104a:	6a 95       	dec	r22
    104c:	d1 f7       	brne	.-12     	; 0x1042 <__unpack_f+0x52>
    104e:	83 e0       	ldi	r24, 0x03	; 3
    1050:	80 83       	st	Z, r24
    1052:	09 c0       	rjmp	.+18     	; 0x1066 <__unpack_f+0x76>
    1054:	22 0f       	add	r18, r18
    1056:	33 1f       	adc	r19, r19
    1058:	44 1f       	adc	r20, r20
    105a:	55 1f       	adc	r21, r21
    105c:	82 81       	ldd	r24, Z+2	; 0x02
    105e:	93 81       	ldd	r25, Z+3	; 0x03
    1060:	01 97       	sbiw	r24, 0x01	; 1
    1062:	93 83       	std	Z+3, r25	; 0x03
    1064:	82 83       	std	Z+2, r24	; 0x02
    1066:	20 30       	cpi	r18, 0x00	; 0
    1068:	80 e0       	ldi	r24, 0x00	; 0
    106a:	38 07       	cpc	r19, r24
    106c:	80 e0       	ldi	r24, 0x00	; 0
    106e:	48 07       	cpc	r20, r24
    1070:	80 e4       	ldi	r24, 0x40	; 64
    1072:	58 07       	cpc	r21, r24
    1074:	78 f3       	brcs	.-34     	; 0x1054 <__unpack_f+0x64>
    1076:	20 c0       	rjmp	.+64     	; 0x10b8 <__unpack_f+0xc8>
    1078:	8f 3f       	cpi	r24, 0xFF	; 255
    107a:	91 05       	cpc	r25, r1
    107c:	79 f4       	brne	.+30     	; 0x109c <__unpack_f+0xac>
    107e:	21 15       	cp	r18, r1
    1080:	31 05       	cpc	r19, r1
    1082:	41 05       	cpc	r20, r1
    1084:	51 05       	cpc	r21, r1
    1086:	19 f4       	brne	.+6      	; 0x108e <__unpack_f+0x9e>
    1088:	84 e0       	ldi	r24, 0x04	; 4
    108a:	80 83       	st	Z, r24
    108c:	08 95       	ret
    108e:	44 ff       	sbrs	r20, 4
    1090:	03 c0       	rjmp	.+6      	; 0x1098 <__unpack_f+0xa8>
    1092:	81 e0       	ldi	r24, 0x01	; 1
    1094:	80 83       	st	Z, r24
    1096:	10 c0       	rjmp	.+32     	; 0x10b8 <__unpack_f+0xc8>
    1098:	10 82       	st	Z, r1
    109a:	0e c0       	rjmp	.+28     	; 0x10b8 <__unpack_f+0xc8>
    109c:	8f 57       	subi	r24, 0x7F	; 127
    109e:	90 40       	sbci	r25, 0x00	; 0
    10a0:	93 83       	std	Z+3, r25	; 0x03
    10a2:	82 83       	std	Z+2, r24	; 0x02
    10a4:	83 e0       	ldi	r24, 0x03	; 3
    10a6:	80 83       	st	Z, r24
    10a8:	87 e0       	ldi	r24, 0x07	; 7
    10aa:	22 0f       	add	r18, r18
    10ac:	33 1f       	adc	r19, r19
    10ae:	44 1f       	adc	r20, r20
    10b0:	55 1f       	adc	r21, r21
    10b2:	8a 95       	dec	r24
    10b4:	d1 f7       	brne	.-12     	; 0x10aa <__unpack_f+0xba>
    10b6:	50 64       	ori	r21, 0x40	; 64
    10b8:	24 83       	std	Z+4, r18	; 0x04
    10ba:	35 83       	std	Z+5, r19	; 0x05
    10bc:	46 83       	std	Z+6, r20	; 0x06
    10be:	57 83       	std	Z+7, r21	; 0x07
    10c0:	08 95       	ret

000010c2 <__fpcmp_parts_f>:
    10c2:	fc 01       	movw	r30, r24
    10c4:	db 01       	movw	r26, r22
    10c6:	90 81       	ld	r25, Z
    10c8:	92 30       	cpi	r25, 0x02	; 2
    10ca:	08 f4       	brcc	.+2      	; 0x10ce <__fpcmp_parts_f+0xc>
    10cc:	49 c0       	rjmp	.+146    	; 0x1160 <__fpcmp_parts_f+0x9e>
    10ce:	8c 91       	ld	r24, X
    10d0:	82 30       	cpi	r24, 0x02	; 2
    10d2:	08 f4       	brcc	.+2      	; 0x10d6 <__fpcmp_parts_f+0x14>
    10d4:	45 c0       	rjmp	.+138    	; 0x1160 <__fpcmp_parts_f+0x9e>
    10d6:	94 30       	cpi	r25, 0x04	; 4
    10d8:	51 f4       	brne	.+20     	; 0x10ee <__fpcmp_parts_f+0x2c>
    10da:	61 81       	ldd	r22, Z+1	; 0x01
    10dc:	84 30       	cpi	r24, 0x04	; 4
    10de:	b1 f5       	brne	.+108    	; 0x114c <__fpcmp_parts_f+0x8a>
    10e0:	11 96       	adiw	r26, 0x01	; 1
    10e2:	2c 91       	ld	r18, X
    10e4:	11 97       	sbiw	r26, 0x01	; 1
    10e6:	30 e0       	ldi	r19, 0x00	; 0
    10e8:	26 1b       	sub	r18, r22
    10ea:	31 09       	sbc	r19, r1
    10ec:	41 c0       	rjmp	.+130    	; 0x1170 <__fpcmp_parts_f+0xae>
    10ee:	84 30       	cpi	r24, 0x04	; 4
    10f0:	21 f0       	breq	.+8      	; 0x10fa <__fpcmp_parts_f+0x38>
    10f2:	92 30       	cpi	r25, 0x02	; 2
    10f4:	41 f4       	brne	.+16     	; 0x1106 <__fpcmp_parts_f+0x44>
    10f6:	82 30       	cpi	r24, 0x02	; 2
    10f8:	b1 f1       	breq	.+108    	; 0x1166 <__fpcmp_parts_f+0xa4>
    10fa:	11 96       	adiw	r26, 0x01	; 1
    10fc:	8c 91       	ld	r24, X
    10fe:	11 97       	sbiw	r26, 0x01	; 1
    1100:	88 23       	and	r24, r24
    1102:	a1 f1       	breq	.+104    	; 0x116c <__fpcmp_parts_f+0xaa>
    1104:	2d c0       	rjmp	.+90     	; 0x1160 <__fpcmp_parts_f+0x9e>
    1106:	61 81       	ldd	r22, Z+1	; 0x01
    1108:	82 30       	cpi	r24, 0x02	; 2
    110a:	01 f1       	breq	.+64     	; 0x114c <__fpcmp_parts_f+0x8a>
    110c:	11 96       	adiw	r26, 0x01	; 1
    110e:	8c 91       	ld	r24, X
    1110:	11 97       	sbiw	r26, 0x01	; 1
    1112:	68 17       	cp	r22, r24
    1114:	d9 f4       	brne	.+54     	; 0x114c <__fpcmp_parts_f+0x8a>
    1116:	22 81       	ldd	r18, Z+2	; 0x02
    1118:	33 81       	ldd	r19, Z+3	; 0x03
    111a:	12 96       	adiw	r26, 0x02	; 2
    111c:	8d 91       	ld	r24, X+
    111e:	9c 91       	ld	r25, X
    1120:	13 97       	sbiw	r26, 0x03	; 3
    1122:	82 17       	cp	r24, r18
    1124:	93 07       	cpc	r25, r19
    1126:	94 f0       	brlt	.+36     	; 0x114c <__fpcmp_parts_f+0x8a>
    1128:	28 17       	cp	r18, r24
    112a:	39 07       	cpc	r19, r25
    112c:	bc f0       	brlt	.+46     	; 0x115c <__fpcmp_parts_f+0x9a>
    112e:	24 81       	ldd	r18, Z+4	; 0x04
    1130:	35 81       	ldd	r19, Z+5	; 0x05
    1132:	46 81       	ldd	r20, Z+6	; 0x06
    1134:	57 81       	ldd	r21, Z+7	; 0x07
    1136:	14 96       	adiw	r26, 0x04	; 4
    1138:	8d 91       	ld	r24, X+
    113a:	9d 91       	ld	r25, X+
    113c:	0d 90       	ld	r0, X+
    113e:	bc 91       	ld	r27, X
    1140:	a0 2d       	mov	r26, r0
    1142:	82 17       	cp	r24, r18
    1144:	93 07       	cpc	r25, r19
    1146:	a4 07       	cpc	r26, r20
    1148:	b5 07       	cpc	r27, r21
    114a:	18 f4       	brcc	.+6      	; 0x1152 <__fpcmp_parts_f+0x90>
    114c:	66 23       	and	r22, r22
    114e:	41 f0       	breq	.+16     	; 0x1160 <__fpcmp_parts_f+0x9e>
    1150:	0d c0       	rjmp	.+26     	; 0x116c <__fpcmp_parts_f+0xaa>
    1152:	28 17       	cp	r18, r24
    1154:	39 07       	cpc	r19, r25
    1156:	4a 07       	cpc	r20, r26
    1158:	5b 07       	cpc	r21, r27
    115a:	28 f4       	brcc	.+10     	; 0x1166 <__fpcmp_parts_f+0xa4>
    115c:	66 23       	and	r22, r22
    115e:	31 f0       	breq	.+12     	; 0x116c <__fpcmp_parts_f+0xaa>
    1160:	21 e0       	ldi	r18, 0x01	; 1
    1162:	30 e0       	ldi	r19, 0x00	; 0
    1164:	05 c0       	rjmp	.+10     	; 0x1170 <__fpcmp_parts_f+0xae>
    1166:	20 e0       	ldi	r18, 0x00	; 0
    1168:	30 e0       	ldi	r19, 0x00	; 0
    116a:	02 c0       	rjmp	.+4      	; 0x1170 <__fpcmp_parts_f+0xae>
    116c:	2f ef       	ldi	r18, 0xFF	; 255
    116e:	3f ef       	ldi	r19, 0xFF	; 255
    1170:	c9 01       	movw	r24, r18
    1172:	08 95       	ret

00001174 <__prologue_saves__>:
    1174:	2f 92       	push	r2
    1176:	3f 92       	push	r3
    1178:	4f 92       	push	r4
    117a:	5f 92       	push	r5
    117c:	6f 92       	push	r6
    117e:	7f 92       	push	r7
    1180:	8f 92       	push	r8
    1182:	9f 92       	push	r9
    1184:	af 92       	push	r10
    1186:	bf 92       	push	r11
    1188:	cf 92       	push	r12
    118a:	df 92       	push	r13
    118c:	ef 92       	push	r14
    118e:	ff 92       	push	r15
    1190:	0f 93       	push	r16
    1192:	1f 93       	push	r17
    1194:	cf 93       	push	r28
    1196:	df 93       	push	r29
    1198:	cd b7       	in	r28, 0x3d	; 61
    119a:	de b7       	in	r29, 0x3e	; 62
    119c:	ca 1b       	sub	r28, r26
    119e:	db 0b       	sbc	r29, r27
    11a0:	0f b6       	in	r0, 0x3f	; 63
    11a2:	f8 94       	cli
    11a4:	de bf       	out	0x3e, r29	; 62
    11a6:	0f be       	out	0x3f, r0	; 63
    11a8:	cd bf       	out	0x3d, r28	; 61
    11aa:	09 94       	ijmp

000011ac <__epilogue_restores__>:
    11ac:	2a 88       	ldd	r2, Y+18	; 0x12
    11ae:	39 88       	ldd	r3, Y+17	; 0x11
    11b0:	48 88       	ldd	r4, Y+16	; 0x10
    11b2:	5f 84       	ldd	r5, Y+15	; 0x0f
    11b4:	6e 84       	ldd	r6, Y+14	; 0x0e
    11b6:	7d 84       	ldd	r7, Y+13	; 0x0d
    11b8:	8c 84       	ldd	r8, Y+12	; 0x0c
    11ba:	9b 84       	ldd	r9, Y+11	; 0x0b
    11bc:	aa 84       	ldd	r10, Y+10	; 0x0a
    11be:	b9 84       	ldd	r11, Y+9	; 0x09
    11c0:	c8 84       	ldd	r12, Y+8	; 0x08
    11c2:	df 80       	ldd	r13, Y+7	; 0x07
    11c4:	ee 80       	ldd	r14, Y+6	; 0x06
    11c6:	fd 80       	ldd	r15, Y+5	; 0x05
    11c8:	0c 81       	ldd	r16, Y+4	; 0x04
    11ca:	1b 81       	ldd	r17, Y+3	; 0x03
    11cc:	aa 81       	ldd	r26, Y+2	; 0x02
    11ce:	b9 81       	ldd	r27, Y+1	; 0x01
    11d0:	ce 0f       	add	r28, r30
    11d2:	d1 1d       	adc	r29, r1
    11d4:	0f b6       	in	r0, 0x3f	; 63
    11d6:	f8 94       	cli
    11d8:	de bf       	out	0x3e, r29	; 62
    11da:	0f be       	out	0x3f, r0	; 63
    11dc:	cd bf       	out	0x3d, r28	; 61
    11de:	ed 01       	movw	r28, r26
    11e0:	08 95       	ret

000011e2 <_exit>:
    11e2:	f8 94       	cli

000011e4 <__stop_program>:
    11e4:	ff cf       	rjmp	.-2      	; 0x11e4 <__stop_program>
