//*****************************************************************************
//*****************************************************************************
//  FILENAME: SPIS.h
//  Version: 2.60, Updated on 2011/12/1 at 17:23:21
//  Generated by PSoC Designer 5.2.2401
//
//  DESCRIPTION: SPIS User Module C Language interface file.
//-----------------------------------------------------------------------------
//      Copyright (c) Cypress Semiconductor 2011. All Rights Reserved.
//*****************************************************************************
//*****************************************************************************
#ifndef SPIS_INCLUDE
#define SPIS_INCLUDE

#include <m8c.h>

#pragma fastcall16  SPIS_EnableInt
#pragma fastcall16  SPIS_DisableInt
#pragma fastcall16  SPIS_Start
#pragma fastcall16  SPIS_Stop
#pragma fastcall16  SPIS_SetupTxData
#pragma fastcall16  SPIS_bReadRxData
#pragma fastcall16  SPIS_bReadStatus
#pragma fastcall16  SPIS_DisableSS
#pragma fastcall16  SPIS_EnableSS


//-------------------------------------------------
// Prototypes of the SPIS API.
//-------------------------------------------------
extern void  SPIS_EnableInt(void);
extern void  SPIS_DisableInt(void);
extern void  SPIS_Start(BYTE bConfiguration);
extern void  SPIS_Stop(void);
extern void  SPIS_SetupTxData(BYTE bTxData);
extern BYTE  SPIS_bReadRxData(void);
extern BYTE  SPIS_bReadStatus(void);
extern void  SPIS_DisableSS(void);
extern void  SPIS_EnableSS(void);


//------------------------------------------------------
// Old function prototypes.  Will be removed in future
// release.  Do not use.
//------------------------------------------------------
#pragma fastcall16 bSPIS_ReadRxData
#pragma fastcall16 bSPIS_ReadStatus
#pragma fastcall16 SPIS_ClearSS
#pragma fastcall16 SPIS_SetSS

extern BYTE bSPIS_ReadRxData(void);   // Deprecated, see SPIS_bReadRxData
extern BYTE bSPIS_ReadStatus(void);   // Deprecated, see SPIS_bReadStatus
extern void  SPIS_SetSS(void);        // Deprecated, see SPIS_DisableSS
extern void  SPIS_ClearSS(void);      // Deprecated, see SPIS_EnableSS


//-------------------------------------------------
// Defines for SPIS API's.
//-------------------------------------------------
#define SPIS_INT_REG_ADDR                      ( 0x0e1 )
#define SPIS_bINT_MASK                         ( 0x04 )

//-------------------------------
// SPI Configuration definitions
//-------------------------------
#define  SPIS_SPIS_MODE_0              0x00      // MODE 0 - Leading edge latches data - pos clock
#define  SPIS_SPIS_MODE_1              0x02      // MODE 1 - Leading edge latches data - neg clock
#define  SPIS_SPIS_MODE_2              0x04      // MODE 2 - Trailing edge latches data - pos clock
#define  SPIS_SPIS_MODE_3              0x06      // MODE 3 - Trailing edge latches data - neg clock
#define  SPIS_SPIS_LSB_FIRST           0x80      // LSB bit transmitted/received first
#define  SPIS_SPIS_MSB_FIRST           0x00      // MSB bit transmitted/received first

//-------------------------------
// SPI Status register masks
//-------------------------------
#define  SPIS_SPIS_RX_OVERRUN_ERROR    0x40      // Overrun error in received data
#define  SPIS_SPIS_TX_BUFFER_EMPTY     0x10      // TX Buffer register is ready for next data byte
#define  SPIS_SPIS_RX_BUFFER_FULL      0x08      // RX Buffer register has received current data
#define  SPIS_SPIS_SPI_COMPLETE        0x20      // SPI Tx/Rx cycle has completed

//-------------------------------------------------
// Register Addresses for SPIS
//-------------------------------------------------
#pragma ioport  SPIS_CONTROL_REG:   0x02b                  //Control register
BYTE            SPIS_CONTROL_REG;
#pragma ioport  SPIS_SHIFT_REG: 0x028                      //TX Shift Register register
BYTE            SPIS_SHIFT_REG;
#pragma ioport  SPIS_TX_BUFFER_REG: 0x029                  //TX Buffer Register
BYTE            SPIS_TX_BUFFER_REG;
#pragma ioport  SPIS_RX_BUFFER_REG: 0x02a                  //RX Buffer Register
BYTE            SPIS_RX_BUFFER_REG;
#pragma ioport  SPIS_FUNCTION_REG:  0x128                  //Function register
BYTE            SPIS_FUNCTION_REG;
#pragma ioport  SPIS_INPUT_REG: 0x129                      //Input register
BYTE            SPIS_INPUT_REG;
#pragma ioport  SPIS_OUTPUT_REG:    0x12a                  //Output register
BYTE            SPIS_OUTPUT_REG;

#endif
// end of file SPIS.h
