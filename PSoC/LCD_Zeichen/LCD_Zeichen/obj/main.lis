 0000                   cpu LMM
                        .module main.c
                        .area text(rom, con, rel)
 0000                   .dbfile ./main.c
 0000                   .dbfile G:\PSOCPR~1\LCD_ZE~1\LCD_ZE~1\main.c
 0000                   .dbfunc e main _main fV
 0000           _main::
 0000                   .dbline -1
 0000                   .dbline 8
 0000           ; #include <m8c.h>                                                                                              // Part specific constants and macros
 0000           ; #include "PSoCAPI.h"                                                                                          // PSoC API definitions for all User Modules
 0000           ; 
 0000           ; void Write_Symbol_Heart(void);
 0000           ; void Write_Symbol_Smiley(void);
 0000           ; 
 0000           ; void main(void)
 0000           ; {
 0000                   .dbline 9
 0000           ;       M8C_EnableGInt;
 0000 7101                      or  F, 01h
 0002           
 0002                   .dbline 10
 0002           ;       LCD_1_Start();                                                                          // Initialisieren des LCDs
 0002 10                push X
 0003 7C0000            xcall _LCD_1_Start
 0006 20                pop X
 0007                   .dbline 12
 0007           ; 
 0007           ;       Write_Symbol_Heart();
 0007 905F              xcall _Write_Symbol_Heart
 0009                   .dbline 13
 0009           ;       Write_Symbol_Smiley();
 0009 90A7              xcall _Write_Symbol_Smiley
 000B                   .dbline 15
 000B           ; 
 000B           ;       LCD_1_Position(0,0);
 000B 10                push X
 000C 5000              mov A,0
 000E 5C                mov X,A
 000F 7C0000            xcall _LCD_1_Position
 0012 20                pop X
 0013                   .dbline 16
 0013           ;       LCD_1_PrCString("Ich liebe dich");
 0013 10                push X
 0014 5005              mov A,>L2
 0016 08                push A
 0017 5005              mov A,<L2
 0019 5C                mov X,A
 001A 18                pop A
 001B 7C0000            xcall _LCD_1_PrCString
 001E 20                pop X
 001F                   .dbline 17
 001F           ;       LCD_1_Position(1,0);
 001F 10                push X
 0020 5700              mov X,0
 0022 5001              mov A,1
 0024 7C0000            xcall _LCD_1_Position
 0027 20                pop X
 0028                   .dbline 18
 0028           ;       LCD_1_PrCString("Baby");
 0028 10                push X
 0029 5000              mov A,>L3
 002B 08                push A
 002C 5000              mov A,<L3
 002E 5C                mov X,A
 002F 18                pop A
 0030 7C0000            xcall _LCD_1_PrCString
 0033 20                pop X
 0034                   .dbline 19
 0034           ;       LCD_1_Position(1,5);                                                                            // Cursor setzen
 0034 10                push X
 0035 5705              mov X,5
 0037 5001              mov A,1
 0039 7C0000            xcall _LCD_1_Position
 003C 20                pop X
 003D                   .dbline 20
 003D           ;       LCD_1_WriteData(0);                                                                                     // Anzeigen von Zeichen[0]
 003D 10                push X
 003E 5000              mov A,0
 0040 7C0000            xcall _LCD_1_WriteData
 0043 20                pop X
 0044                   .dbline 21
 0044           ;       LCD_1_Position(2,0);                                                                            // Cursor setzen
 0044 10                push X
 0045 5700              mov X,0
 0047 5002              mov A,2
 0049 7C0000            xcall _LCD_1_Position
 004C 20                pop X
 004D                   .dbline 22
 004D           ;       LCD_1_WriteData(1);                                                                                     // Anzeigen von Zeichen[1]
 004D 10                push X
 004E 5001              mov A,1
 0050 7C0000            xcall _LCD_1_WriteData
 0053 20                pop X
 0054                   .dbline 24
 0054           ;       
 0054           ;       LCD_1_Position(2,0);                                                                            // Cursor In zeile 2 Position 0 setzen
 0054 10                push X
 0055 5700              mov X,0
 0057 5002              mov A,2
 0059 7C0000            xcall _LCD_1_Position
 005C 20                pop X
 005D                   .dbline 25
 005D           ;       LCD_1_Control(0xF);                                                                                     // Schreibt 00001110 in das Controlregister, aktiviert 
 005D 10                push X
 005E 500F              mov A,15
 0060 7C0000            xcall _LCD_1_Control
 0063 20                pop X
 0064           L4:
 0064                   .dbline 34
 0064           ;                                                                                                                               // das Display und den Cursor, lässt den Cursor blinken
 0064           ;                                                                                                                               // DB7     DB6     DB5     DB4     DB3     DB2     DB1     DB0
 0064           ;                                                                                                                               //  0       0       0       0       1       1       1       0
 0064           ;                                                                                                                               //                                                       Display  Cursor  Blinken 
 0064           ;                                                                                                                               //                                                               On/Off   On/Off  On/Off
 0064           ;                                                                                                                               //                                                                1/0      1/0     1/0
 0064           ;       
 0064           ;       while(1)
 0064           ;       {
 0064                   .dbline 35
 0064           ;       }
 0064           L5:
 0064                   .dbline 33
 0064 8FFF              xjmp L4
 0066           X0:
 0066                   .dbline -2
 0066           L1:
 0066                   .dbline 0 ; func end
 0066 8FFF              jmp .
 0068                   .dbend
 0068                   .dbfunc e Write_Symbol_Heart _Write_Symbol_Heart fV
 0068           _Write_Symbol_Heart::
 0068                   .dbline -1
 0068                   .dbline 39
 0068           ; }
 0068           ; 
 0068           ; void Write_Symbol_Heart(void)                                                                 // Unterprogramm zum erstellen eines Herzens
 0068           ; {
 0068                   .dbline 40
 0068           ;       LCD_1_Control(0x40);                                                                            // Adresse für CGRAM (Character Generator RAM), 8 Bit pro Zeichen
 0068 10                push X
 0069 5040              mov A,64
 006B 7C0000            xcall _LCD_1_Control
 006E                   .dbline 41
 006E           ;       LCD_1_Delay50u();                                                                                       // 50us warten
 006E 7C0000            xcall _LCD_1_Delay50u
 0071 20                pop X
 0072                   .dbline 42
 0072           ;       LCD_1_WriteData(32);
 0072 10                push X
 0073 5020              mov A,32
 0075 7C0000            xcall _LCD_1_WriteData
 0078 20                pop X
 0079                   .dbline 43
 0079           ;       LCD_1_WriteData(32);
 0079 10                push X
 007A 5020              mov A,32
 007C 7C0000            xcall _LCD_1_WriteData
 007F 20                pop X
 0080                   .dbline 44
 0080           ;       LCD_1_WriteData(10);
 0080 10                push X
 0081 500A              mov A,10
 0083 7C0000            xcall _LCD_1_WriteData
 0086 20                pop X
 0087                   .dbline 45
 0087           ;       LCD_1_WriteData(21);
 0087 10                push X
 0088 5015              mov A,21
 008A 7C0000            xcall _LCD_1_WriteData
 008D 20                pop X
 008E                   .dbline 46
 008E           ;       LCD_1_WriteData(17);
 008E 10                push X
 008F 5011              mov A,17
 0091 7C0000            xcall _LCD_1_WriteData
 0094 20                pop X
 0095                   .dbline 47
 0095           ;       LCD_1_WriteData(10);
 0095 10                push X
 0096 500A              mov A,10
 0098 7C0000            xcall _LCD_1_WriteData
 009B 20                pop X
 009C                   .dbline 48
 009C           ;       LCD_1_WriteData(4);
 009C 10                push X
 009D 5004              mov A,4
 009F 7C0000            xcall _LCD_1_WriteData
 00A2 20                pop X
 00A3                   .dbline 49
 00A3           ;       LCD_1_WriteData(32);
 00A3 10                push X
 00A4 5020              mov A,32
 00A6 7C0000            xcall _LCD_1_WriteData
 00A9 20                pop X
 00AA                   .dbline 50
 00AA           ;       LCD_1_Control(0x80);                                                                            // Adresse des DDRAM
 00AA 10                push X
 00AB 5080              mov A,-128
 00AD 7C0000            xcall _LCD_1_Control
 00B0 20                pop X
 00B1                   .dbline -2
 00B1           L7:
 00B1                   .dbline 0 ; func end
 00B1 7F                ret
 00B2                   .dbend
 00B2                   .dbfunc e Write_Symbol_Smiley _Write_Symbol_Smiley fV
 00B2           _Write_Symbol_Smiley::
 00B2                   .dbline -1
 00B2                   .dbline 54
 00B2           ; }
 00B2           ; 
 00B2           ; void Write_Symbol_Smiley(void)        
 00B2           ; {
 00B2                   .dbline 55
 00B2           ;       LCD_1_Control(0x48);                                                                            // Adresse für CGRAM (Character Generator RAM), 8 Bit pro Zeichen
 00B2 10                push X
 00B3 5048              mov A,72
 00B5 7C0000            xcall _LCD_1_Control
 00B8                   .dbline 56
 00B8           ;       LCD_1_Delay50u();                                                                                       // 50us warten
 00B8 7C0000            xcall _LCD_1_Delay50u
 00BB 20                pop X
 00BC                   .dbline 57
 00BC           ;       LCD_1_WriteData(32);
 00BC 10                push X
 00BD 5020              mov A,32
 00BF 7C0000            xcall _LCD_1_WriteData
 00C2 20                pop X
 00C3                   .dbline 58
 00C3           ;       LCD_1_WriteData(32);
 00C3 10                push X
 00C4 5020              mov A,32
 00C6 7C0000            xcall _LCD_1_WriteData
 00C9 20                pop X
 00CA                   .dbline 59
 00CA           ;       LCD_1_WriteData(10);
 00CA 10                push X
 00CB 500A              mov A,10
 00CD 7C0000            xcall _LCD_1_WriteData
 00D0 20                pop X
 00D1                   .dbline 60
 00D1           ;       LCD_1_WriteData(32);
 00D1 10                push X
 00D2 5020              mov A,32
 00D4 7C0000            xcall _LCD_1_WriteData
 00D7 20                pop X
 00D8                   .dbline 61
 00D8           ;       LCD_1_WriteData(17);
 00D8 10                push X
 00D9 5011              mov A,17
 00DB 7C0000            xcall _LCD_1_WriteData
 00DE 20                pop X
 00DF                   .dbline 62
 00DF           ;       LCD_1_WriteData(14);
 00DF 10                push X
 00E0 500E              mov A,14
 00E2 7C0000            xcall _LCD_1_WriteData
 00E5 20                pop X
 00E6                   .dbline 63
 00E6           ;       LCD_1_WriteData(32);
 00E6 10                push X
 00E7 5020              mov A,32
 00E9 7C0000            xcall _LCD_1_WriteData
 00EC 20                pop X
 00ED                   .dbline 64
 00ED           ;       LCD_1_WriteData(32);
 00ED 10                push X
 00EE 5020              mov A,32
 00F0 7C0000            xcall _LCD_1_WriteData
 00F3 20                pop X
 00F4                   .dbline 65
 00F4           ;       LCD_1_Control(0x80);    
 00F4 10                push X
 00F5 5080              mov A,-128
 00F7 7C0000            xcall _LCD_1_Control
 00FA 20                pop X
 00FB                   .dbline -2
 00FB           L8:
 00FB                   .dbline 0 ; func end
 00FB 7F                ret
 00FC                   .dbend
                        .area lit(rom, con, rel)
 0000           L3:
 0000 4261627900        .byte 'B,'a,'b,'y,0
 0005           L2:
 0005 496368206C69656265206469636800    .byte 'I,'c,'h,32,'l,'i,'e,'b,'e,32,'d,'i,'c,'h,0
