//*****************************************************************************
//*****************************************************************************
//  FILENAME:  ADCINC12.h
//  Version: 5.3, Updated on 2011/6/28 at 6:8:0
//  Generated by PSoC Designer 5.1.2306
//
//  DESCRIPTION:
//    C declarations for the ACDINC12 User Module.
//-----------------------------------------------------------------------------
//      Copyright (c) Cypress Semiconductor 2011. All Rights Reserved.
//*****************************************************************************
//*****************************************************************************
#ifndef ADCINC12_INCLUDE
#define ADCINC12_INCLUDE

#include <M8C.h>


#pragma fastcall16 ADCINC12_Start
#pragma fastcall16 ADCINC12_SetPower
#pragma fastcall16 ADCINC12_GetSamples
#pragma fastcall16 ADCINC12_StopAD
#pragma fastcall16 ADCINC12_Stop

#pragma fastcall16 ADCINC12_fIsDataAvailable
#pragma fastcall16 ADCINC12_iGetData
#pragma fastcall16 ADCINC12_ClearFlag

//-------------------------------------------------
// Prototypes of the ADCINC12 API.
//-------------------------------------------------
extern void ADCINC12_Start(BYTE  bPower);
extern void ADCINC12_SetPower(BYTE bPower);
extern void ADCINC12_GetSamples(BYTE bNumSamples);
extern void ADCINC12_StopAD(void);
extern void ADCINC12_Stop(void);

extern BYTE ADCINC12_fIsDataAvailable(void);
extern INT  ADCINC12_iGetData(void);
extern void ADCINC12_ClearFlag(void);

// deprecated function!
#pragma fastcall16 ADCINC12_fIsData
extern BYTE ADCINC12_fIsData(void);


//-------------------------------------------------
// Constants for ADCINC12 API's.
//-------------------------------------------------
#define ADCINC12_OFF         0
#define ADCINC12_LOWPOWER    1
#define ADCINC12_MEDPOWER    2
#define ADCINC12_HIGHPOWER   3

//-------------------------------------------------
// Register Addresses for ADCINC12
//-------------------------------------------------

#pragma ioport  ADCINC12_AtoDcr0:   0x080
BYTE            ADCINC12_AtoDcr0;
#pragma ioport  ADCINC12_AtoDcr1:   0x081
BYTE            ADCINC12_AtoDcr1;
#pragma ioport  ADCINC12_AtoDcr2:   0x082
BYTE            ADCINC12_AtoDcr2;
#pragma ioport  ADCINC12_AtoDcr3:   0x083
BYTE            ADCINC12_AtoDcr3;
#pragma ioport  ADCINC12_CounterFN: 0x12c
BYTE            ADCINC12_CounterFN;
#pragma ioport  ADCINC12_CounterSL: 0x12d
BYTE            ADCINC12_CounterSL;
#pragma ioport  ADCINC12_CounterOS: 0x12e
BYTE            ADCINC12_CounterOS;
#pragma ioport  ADCINC12_CounterDR0:    0x02c
BYTE            ADCINC12_CounterDR0;
#pragma ioport  ADCINC12_CounterDR1:    0x02d
BYTE            ADCINC12_CounterDR1;
#pragma ioport  ADCINC12_CounterDR2:    0x02e
BYTE            ADCINC12_CounterDR2;
#pragma ioport  ADCINC12_CounterCR0:    0x02f
BYTE            ADCINC12_CounterCR0;
#pragma ioport  ADCINC12_TimerFN:   0x128
BYTE            ADCINC12_TimerFN;
#pragma ioport  ADCINC12_TimerSL:   0x129
BYTE            ADCINC12_TimerSL;
#pragma ioport  ADCINC12_TimerOS:   0x12a
BYTE            ADCINC12_TimerOS;
#pragma ioport  ADCINC12_TimerDR0:  0x028
BYTE            ADCINC12_TimerDR0;
#pragma ioport  ADCINC12_TimerDR1:  0x029
BYTE            ADCINC12_TimerDR1;
#pragma ioport  ADCINC12_TimerDR2:  0x02a
BYTE            ADCINC12_TimerDR2;
#pragma ioport  ADCINC12_TimerCR0:  0x02b
BYTE            ADCINC12_TimerCR0;

#endif
