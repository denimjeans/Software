/*****************************************************************************
;;*****************************************************************************
;;  FILENAME:   ADC10.inc
;;  Version: 1.20, Updated on 2012/9/21 at 11:56:45
;;  Generated by PSoC Designer 5.3.2710
;;
;;  DESCRIPTION:
;;    Assembler declarations for the ACDINC12 user module interface.
;;-----------------------------------------------------------------------------
;;  Copyright (c) Cypress Semiconductor 2012. All Rights Reserved.
;;*****************************************************************************
;;****************************************************************************/
#ifndef ADC10_INCLUDE
#define ADC10_INCLUDE

#include <m8C.h>

#define ADC10_DIE_TEMP_ENABLED 1

// Function Fastcall Pragmas
#pragma fastcall16  ADC10_Start
#pragma fastcall16  ADC10_Stop
#pragma fastcall16  ADC10_StartADC
#pragma fastcall16  ADC10_StopADC
#pragma fastcall16  ADC10_fIsDataAvailable
#pragma fastcall16  ADC10_iGetData
#pragma fastcall16  ADC10_ClearFlag
#pragma fastcall16  ADC10_iGetDataClearFlag
#pragma fastcall16  ADC10_iCal

#if ADC10_DIE_TEMP_ENABLED
#pragma fastcall16  ADC10_StartTempMeasurement
#pragma fastcall16  ADC10_GetTemperature
#endif
//-------------------------------------------------
// Prototypes of the ADC10 API.
//-------------------------------------------------
extern void ADC10_Start(BYTE bRange);
extern void ADC10_Stop(void);
extern void ADC10_StartADC(void);
extern void ADC10_StopADC(void);
extern BYTE ADC10_fIsDataAvailable(void);
extern int  ADC10_iGetData(void);
extern void ADC10_ClearFlag(void);
extern int  ADC10_iGetDataClearFlag(void);
extern int  ADC10_iCal(int iVal, BYTE bCalIn);

#if ADC10_DIE_TEMP_ENABLED
extern void ADC10_StartTempMeasurement(void);
extern CHAR ADC10_GetTemperature(WORD wCalibrationVoltage);
#endif

#define ADC10_LOWRANGE		0x01
#define ADC10_FULLRANGE  	0x03

#define ADC10_CAL_VBG		0x03
#define ADC10_CAL_AMUXBUS 	0x07
#define ADC10_CAL_P0_0		0x10
#define ADC10_CAL_P0_1		0x90
#define ADC10_CAL_P0_2		0x14
#define ADC10_CAL_P0_3		0x91
#define ADC10_CAL_P0_4		0x18
#define ADC10_CAL_P0_5		0x92
#define ADC10_CAL_P0_6		0x1C
#define ADC10_CAL_P0_7		0x93

// Counter Block Register Definitions
#pragma ioport  ADC10_ASE_CR0:  0x084
BYTE            ADC10_ASE_CR0;
#pragma ioport  ADC10_ACE_CR1:  0x076
BYTE            ADC10_ACE_CR1;
#pragma ioport  ADC10_ACE_CR2:  0x077
BYTE            ADC10_ACE_CR2;
#pragma ioport  ADC10_ADC_CR:   0x069
BYTE            ADC10_ADC_CR;
#pragma ioport  ADC10_ADC_TR:   0x1e6
BYTE            ADC10_ADC_TR;
 
// Counter Block Register Definitions
#pragma ioport  ADC10_CNT_FN:   0x128
BYTE            ADC10_CNT_FN;
#pragma ioport  ADC10_CNT_IN:   0x129
BYTE            ADC10_CNT_IN;
#pragma ioport  ADC10_CNT_OUT:  0x12a
BYTE            ADC10_CNT_OUT;
#pragma ioport  ADC10_CNT_DR0:  0x028
BYTE            ADC10_CNT_DR0;
#pragma ioport  ADC10_CNT_DR1:  0x029
BYTE            ADC10_CNT_DR1;
#pragma ioport  ADC10_CNT_DR2:  0x02a
BYTE            ADC10_CNT_DR2;
#pragma ioport  ADC10_CNT_CR0:  0x02b
BYTE            ADC10_CNT_CR0;
   
#endif
